const tfn = require('@tensorflow/tfjs-node');

var max=[1726, 1713, 1697, 1612, 1518, 1816, 2047, 2047, 2047, 2047, 2047, 2047,
 2047, 1829, 1631, 1532, 1441, 1352, 1504, 1821, 2022, 2047, 2040, 1879,
 1666, 1435, 1340, 1257, 1452, 1551, 1446, 1381, 1259, 1213, 1364, 1220,
 1304, 1344, 1298, 1518, 1293, 1309, 1451, 1567, 1388, 1473, 1846, 2047,
 2047, 2047, 2047, 2047, 2021, 1890, 1777, 1674, 1590, 1869, 2047, 2047,
 2047, 2047, 1880, 1651, 1467, 1299, 1278, 1241, 1325, 1270, 1390, 1480,
 1630, 1948, 2047, 2047, 2047, 2047, 2047, 1925, 1818, 2047, 2047, 2047,
 2047, 2047, 2047, 1748, 1450, 1368, 1224, 1227, 1454, 1502, 1421, 1346,
 1505, 1868, 2047, 2047, 2047, 2047, 2047, 1786, 1568, 1407, 1249, 1308,
 1252, 1377, 1513, 1815, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047,
 2047, 1950, 1771, 1618, 1483, 1448, 1424, 1305, 1445, 1376, 1383, 1908,
 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2047, 2045, 2047,
 2047, 2047, 2047, 1934, 1644, 1524, 1565, 1682, 1977, 2047, 2047, 1902,
 1681, 1502, 1314, 1431, 1543, 1556, 1597, 1629, 1726, 2047, 2047, 2047,
 2047, 1777, 1472, 1319, 1436, 1733, 1958, 2047, 2047, 1915];

var min=[-1839, -1838, -1835, -1845, -1791, -1757, -1832, -1778, -1840, -1867,
 -1765, -1803, -1833, -1867, -1870, -1839, -1867, -1856, -1844, -1717,
 -1764, -1856, -1844, -1866, -1863, -1866, -1781, -1860, -1818, -1867,
 -1743, -1517, -1552, -1720, -1864, -1814, -1829, -1851, -1840, -1673,
 -1832, -1865, -1656, -1825, -1870, -1868, -1850, -1869, -1885, -1871,
 -1867, -1848, -1868, -1788, -1773, -1862, -1869, -1865, -1863, -1861,
 -1868, -1860, -1627, -1721, -1866, -1862, -1844, -1843, -1559, -1797,
 -1844, -1852, -1849, -1850, -1852, -1868, -1799, -1650, -1838, -1872,
 -1884, -1884, -1848, -1866, -1835, -1678, -1863, -1858, -1689, -1849,
 -1865, -1838, -1771, -1849, -1846, -1815, -1745, -1837, -1864, -1747,
 -1868, -1869, -1860, -1744, -1582, -1784, -1829, -1768, -1736, -1789,
 -1867, -1841, -1867, -1858, -1868, -1813, -1829, -1868, -1793, -1637,
 -1415, -1830, -1877, -1885, -1839, -1863, -1863, -1774, -1864, -1847,
 -1589, -1719, -1859, -1824, -1843, -1784, -1585, -1765, -1857, -1867,
 -1826, -1866, -1854, -1789, -1872, -1866, -1675, -1778, -1733, -1862,
 -1861, -1857, -1839, -1860, -1843, -1863, -1861, -1845, -1820, -1864,
 -1868, -1855, -1852, -1870, -1847, -1578, -1838, -1763, -1860, -1867,
 -1865, -1642, -1723, -1866, -1863, -1781, -1727, -1829];

var test=[386,382,356,331,320,315,307,272,244,232,237,258,212,2,-267,-605,-850,-1001,-1109,-1090,-967,-746,-464,-152,118,318,427,473,485,447,397,339,312,314,326,335,332,324,310,312,309,309,303,297,295,295,293,286,279,283,301,308,285,252,215,194,169,111,-74,-388,-679,-892,-949,-972,-1001,-1006,-949,-847,-668,-432,-153,72,226,326,392,461,495,513,511,496,479,453,440,427,414,399,385,385,404,432,444,437,418,392,373,363,365,372,385,388,383,371,360,353,334,303,252,200,153,151,143,48,-206,-548,-859,-1067,-1069,-957,-780,-597,-460,-357,-276,-224,-210,-350,-930,-1413,-1716,-1360,-662,-96,243,323,241,29,-167,-228,-136,27,146,229,269,297,307,303,305,306,307,280,231,159,85,51,43,62,63,63,69,89,123,136,127,102,95,105,131,163,168,164,150,146,152,157,156,154,143,129];
        const testTensor = tfn.tensor2d(test, [test.length, 1]);
        const maxTensor = tfn.tensor2d(max, [max.length, 1]);
        const minTensor = tfn.tensor2d(min, [min.length, 1]);
        const normalizedTestTensor = testTensor.sub(minTensor).div(maxTensor.sub(minTensor)).expandDims();
        normalizedTestTensor.print();
        console.log(normalizedTestTensor);
        console.log('in model');
        const model = tfn.loadLayersModel('file://../model/model.json');
        console.log(model);
        // const handler = tfn.io.fileSystem("model.json");
        // const model = tfn.loadModel(handler);
        model.then(function (m){
        const prediction = m.predict(normalizedTestTensor);
        console.log('prediction is');

        console.log(prediction.arraySync());
        });
        