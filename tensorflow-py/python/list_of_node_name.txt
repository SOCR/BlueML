{u'cost/cost/Rank_2': name: "cost/cost/Rank_2"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, u'cost/cost/Rank_1': name: "cost/cost/Rank_1"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, u'biases/random_normal_3/RandomStandardNormal': name: "biases/random_normal_3/RandomStandardNormal"
op: "RandomStandardNormal"
input: "biases/random_normal_3/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
, u'cost/gradients/pred/fullyConnected/MatMul_grad/MatMul_1': name: "cost/gradients/pred/fullyConnected/MatMul_grad/MatMul_1"
op: "MatMul"
input: "pred/fullyConnected/Reshape"
input: "cost/gradients/pred/fullyConnected/Add_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, u'cost/gradients/pred/fullyConnected/Add_grad/Reshape': name: "cost/gradients/pred/fullyConnected/Add_grad/Reshape"
op: "Reshape"
input: "cost/gradients/pred/fullyConnected/Add_grad/Sum"
input: "cost/gradients/pred/fullyConnected/Add_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'biases/bd1/Adam/read': name: "biases/bd1/Adam/read"
op: "Identity"
input: "biases/bd1/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'cost/gradients/pred/conv2/Conv2D_grad/Conv2DBackpropInput': name: "cost/gradients/pred/conv2/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "cost/gradients/pred/conv2/Conv2D_grad/ShapeN"
input: "weights/wc2/read"
input: "cost/gradients/pred/conv2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 300
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
, u'specificity/Mul': name: "specificity/Mul"
op: "Mul"
input: "specificity/Reshape"
input: "specificity/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/mul_grad/Reshape_1': name: "cost/gradients/pred/fullyConnected/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "cost/gradients/pred/fullyConnected/dropout/mul_grad/Sum_1"
input: "cost/gradients/pred/fullyConnected/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
, u'cost/cost/concat_1': name: "cost/cost/concat_1"
op: "ConcatV2"
input: "cost/cost/concat_1/values_0"
input: "cost/cost/Slice_1"
input: "cost/cost/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
, u'biases/outB/Assign': name: "biases/outB/Assign"
op: "Assign"
input: "biases/outB"
input: "biases/random_normal_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/outB"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save_1/SaveV2': name: "save_1/SaveV2"
op: "SaveV2"
input: "save_1/ShardedFilename"
input: "save_1/SaveV2/tensor_names"
input: "save_1/SaveV2/shape_and_slices"
input: "biases/bc1"
input: "biases/bc1/Adam"
input: "biases/bc1/Adam_1"
input: "biases/bc2"
input: "biases/bc2/Adam"
input: "biases/bc2/Adam_1"
input: "biases/bd1"
input: "biases/bd1/Adam"
input: "biases/bd1/Adam_1"
input: "biases/outB"
input: "biases/outB/Adam"
input: "biases/outB/Adam_1"
input: "cost/beta1_power"
input: "cost/beta2_power"
input: "weights/outW"
input: "weights/outW/Adam"
input: "weights/outW/Adam_1"
input: "weights/wc1"
input: "weights/wc1/Adam"
input: "weights/wc1/Adam_1"
input: "weights/wc2"
input: "weights/wc2/Adam"
input: "weights/wc2/Adam_1"
input: "weights/wd1"
input: "weights/wd1/Adam"
input: "weights/wd1/Adam_1"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
    }
  }
}
, u'cost/Const': name: "cost/Const"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, u'cost/cost/Sub/y': name: "cost/cost/Sub/y"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, u'cost/gradients/cost/cost/Reshape_2_grad/Shape': name: "cost/gradients/cost/cost/Reshape_2_grad/Shape"
op: "Shape"
input: "cost/cost"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, u'cost/gradients/pred/conv1/Conv2D_grad/tuple/group_deps': name: "cost/gradients/pred/conv1/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^cost/gradients/pred/conv1/Conv2D_grad/Conv2DBackpropFilter"
input: "^cost/gradients/pred/conv1/Conv2D_grad/Conv2DBackpropInput"
, u'cost/gradients/pred/conv2/Conv2D_grad/tuple/control_dependency_1': name: "cost/gradients/pred/conv2/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "cost/gradients/pred/conv2/Conv2D_grad/Conv2DBackpropFilter"
input: "^cost/gradients/pred/conv2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/pred/conv2/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
, u'cost/gradients/pred/conv1/MaxPool_grad/MaxPoolGrad': name: "cost/gradients/pred/conv1/MaxPool_grad/MaxPoolGrad"
op: "MaxPoolGrad"
input: "pred/conv1/Relu"
input: "pred/conv1/MaxPool"
input: "cost/gradients/pred/conv1/Relu_1_grad/ReluGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 600
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 1
      i: 1
    }
  }
}
, u'biases/bc1/Adam_1/Initializer/zeros': name: "biases/bc1/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}
, u'cost/Adam/epsilon': name: "cost/Adam/epsilon"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.99999993923e-09
    }
  }
}
, u'cost/gradients/cost/Mean_grad/Prod': name: "cost/gradients/cost/Mean_grad/Prod"
op: "Prod"
input: "cost/gradients/cost/Mean_grad/Shape_1"
input: "cost/gradients/cost/Mean_grad/Const"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, u'strided_slice': name: "strided_slice"
op: "StridedSlice"
input: "Shape"
input: "strided_slice/stack"
input: "strided_slice/stack_1"
input: "strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, u'biases/bc2/Adam_1/Assign': name: "biases/bc2/Adam_1/Assign"
op: "Assign"
input: "biases/bc2/Adam_1"
input: "biases/bc2/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'biases/outB/Adam/Initializer/zeros': name: "biases/outB/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/outB"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 2
        }
      }
      float_val: 0.0
    }
  }
}
, u'sensitivity/Equal/y': name: "sensitivity/Equal/y"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT64
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT64
      tensor_shape {
      }
      int64_val: 1
    }
  }
}
, u'div': name: "div"
op: "RealDiv"
input: "add"
input: "div/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'sensitivity/Slice/begin': name: "sensitivity/Slice/begin"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, u'weights/wd1/Adam': name: "weights/wd1/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 9600
      }
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'cost/gradients/Fill': name: "cost/gradients/Fill"
op: "Fill"
input: "cost/gradients/Shape"
input: "cost/gradients/grad_ys_0"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, u'cost/gradients/cost/Mean_grad/Const': name: "cost/gradients/cost/Mean_grad/Const"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, u'biases/bc2/read': name: "biases/bc2/read"
op: "Identity"
input: "biases/bc2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
, u'cost/gradients/cost/cost_grad/mul': name: "cost/gradients/cost/cost_grad/mul"
op: "Mul"
input: "cost/gradients/cost/cost_grad/ExpandDims"
input: "cost/cost:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
, u'biases/bc2/Assign': name: "biases/bc2/Assign"
op: "Assign"
input: "biases/bc2"
input: "biases/random_normal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'biases/outB/Adam/Assign': name: "biases/outB/Adam/Assign"
op: "Assign"
input: "biases/outB/Adam"
input: "biases/outB/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/outB"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'weights/outW/Assign': name: "weights/outW/Assign"
op: "Assign"
input: "weights/outW"
input: "weights/random_normal_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/outW"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'cost/gradients/cost/Mean_grad/Shape': name: "cost/gradients/cost/Mean_grad/Shape"
op: "Shape"
input: "cost/cost/Reshape_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, u'pred/reshape/Reshape': name: "pred/reshape/Reshape"
op: "Reshape"
input: "input/X"
input: "pred/reshape/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 600
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
, u'cost/cost/Slice_2/begin': name: "cost/cost/Slice_2/begin"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, u'weights/random_normal_1': name: "weights/random_normal_1"
op: "Add"
input: "weights/random_normal_1/mul"
input: "weights/random_normal_1/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
, u'weights/random_normal_3': name: "weights/random_normal_3"
op: "Add"
input: "weights/random_normal_3/mul"
input: "weights/random_normal_3/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
, u'weights/random_normal_2': name: "weights/random_normal_2"
op: "Add"
input: "weights/random_normal_2/mul"
input: "weights/random_normal_2/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'weights/wc1/Assign': name: "weights/wc1/Assign"
op: "Assign"
input: "weights/wc1"
input: "weights/random_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'pred/conv2/Relu_1': name: "pred/conv2/Relu_1"
op: "Relu"
input: "pred/conv2/MaxPool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 150
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
}
, u'biases/bd1/Adam_1/Assign': name: "biases/bd1/Adam_1/Assign"
op: "Assign"
input: "biases/bd1/Adam_1"
input: "biases/bd1/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save_1/Assign_10': name: "save_1/Assign_10"
op: "Assign"
input: "biases/outB/Adam"
input: "save_1/RestoreV2:10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/outB"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'weights/wc2/Assign': name: "weights/wc2/Assign"
op: "Assign"
input: "weights/wc2"
input: "weights/random_normal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'pred/fullyConnected/dropout/random_uniform/sub': name: "pred/fullyConnected/dropout/random_uniform/sub"
op: "Sub"
input: "pred/fullyConnected/dropout/random_uniform/max"
input: "pred/fullyConnected/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'save/SaveV2/shape_and_slices': name: "save/SaveV2/shape_and_slices"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 26
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 26
        }
      }
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
    }
  }
}
, u'cost/gradients/cost/cost_grad/LogSoftmax': name: "cost/gradients/cost/cost_grad/LogSoftmax"
op: "LogSoftmax"
input: "cost/cost/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
, u'cost/Adam/update_weights/wd1/ApplyAdam': name: "cost/Adam/update_weights/wd1/ApplyAdam"
op: "ApplyAdam"
input: "weights/wd1"
input: "weights/wd1/Adam"
input: "weights/wd1/Adam_1"
input: "cost/beta1_power/read"
input: "cost/beta2_power/read"
input: "cost/Adam/learning_rate"
input: "cost/Adam/beta1"
input: "cost/Adam/beta2"
input: "cost/Adam/epsilon"
input: "cost/gradients/pred/fullyConnected/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, u'weights/wd1/Adam_1': name: "weights/wd1/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 9600
      }
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'cost/gradients/cost/cost_grad/Neg': name: "cost/gradients/cost/cost_grad/Neg"
op: "Neg"
input: "cost/gradients/cost/cost_grad/LogSoftmax"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
, u'cost/gradients/cost/Mean_grad/truediv': name: "cost/gradients/cost/Mean_grad/truediv"
op: "RealDiv"
input: "cost/gradients/cost/Mean_grad/Tile"
input: "cost/gradients/cost/Mean_grad/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
, u'specificity/div': name: "specificity/div"
op: "RealDiv"
input: "specificity/Sum"
input: "specificity/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'cost/cost/Reshape_1': name: "cost/cost/Reshape_1"
op: "Reshape"
input: "input/y"
input: "cost/cost/concat_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
, u'cost/cost/Reshape_2': name: "cost/cost/Reshape_2"
op: "Reshape"
input: "cost/cost"
input: "cost/cost/Slice_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
, u'weights/random_normal': name: "weights/random_normal"
op: "Add"
input: "weights/random_normal/mul"
input: "weights/random_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
, u'pred/conv2/MaxPool': name: "pred/conv2/MaxPool"
op: "MaxPool"
input: "pred/conv2/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 150
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 1
      i: 1
    }
  }
}
, u'sensitivity/Slice/size/1': name: "sensitivity/Slice/size/1"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, u'cost/gradients/Shape': name: "cost/gradients/Shape"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, u'biases/outB/Adam/read': name: "biases/outB/Adam/read"
op: "Identity"
input: "biases/outB/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/outB"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
, u'biases/random_normal_3/mul': name: "biases/random_normal_3/mul"
op: "Mul"
input: "biases/random_normal_3/RandomStandardNormal"
input: "biases/random_normal_3/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
, u'weights/wd1/Adam/Initializer/zeros': name: "weights/wd1/Adam/Initializer/zeros"
op: "Fill"
input: "weights/wd1/Adam/Initializer/zeros/shape_as_tensor"
input: "weights/wd1/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, u'cost/gradients/pred/conv2/BiasAdd_grad/tuple/control_dependency_1': name: "cost/gradients/pred/conv2/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "cost/gradients/pred/conv2/BiasAdd_grad/BiasAddGrad"
input: "^cost/gradients/pred/conv2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/pred/conv2/BiasAdd_grad/BiasAddGrad"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
, u'pred/fullyConnected/Relu': name: "pred/fullyConnected/Relu"
op: "Relu"
input: "pred/fullyConnected/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'weights/outW/Adam': name: "weights/outW/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/outW"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1024
      }
      dim {
        size: 2
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'init': name: "init"
op: "NoOp"
input: "^biases/bc1/Adam/Assign"
input: "^biases/bc1/Adam_1/Assign"
input: "^biases/bc1/Assign"
input: "^biases/bc2/Adam/Assign"
input: "^biases/bc2/Adam_1/Assign"
input: "^biases/bc2/Assign"
input: "^biases/bd1/Adam/Assign"
input: "^biases/bd1/Adam_1/Assign"
input: "^biases/bd1/Assign"
input: "^biases/outB/Adam/Assign"
input: "^biases/outB/Adam_1/Assign"
input: "^biases/outB/Assign"
input: "^cost/beta1_power/Assign"
input: "^cost/beta2_power/Assign"
input: "^weights/outW/Adam/Assign"
input: "^weights/outW/Adam_1/Assign"
input: "^weights/outW/Assign"
input: "^weights/wc1/Adam/Assign"
input: "^weights/wc1/Adam_1/Assign"
input: "^weights/wc1/Assign"
input: "^weights/wc2/Adam/Assign"
input: "^weights/wc2/Adam_1/Assign"
input: "^weights/wc2/Assign"
input: "^weights/wd1/Adam/Assign"
input: "^weights/wd1/Adam_1/Assign"
input: "^weights/wd1/Assign"
, u'score/tags': name: "score/tags"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
      }
      string_val: "score"
    }
  }
}
, u'weights/outW/Adam_1/Initializer/zeros/Const': name: "weights/outW/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/outW"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, u'weights/wc2/Adam/Initializer/zeros': name: "weights/wc2/Adam/Initializer/zeros"
op: "Fill"
input: "weights/wc2/Adam/Initializer/zeros/shape_as_tensor"
input: "weights/wc2/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, u'weights/random_normal/RandomStandardNormal': name: "weights/random_normal/RandomStandardNormal"
op: "RandomStandardNormal"
input: "weights/random_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/div_grad/Sum': name: "cost/gradients/pred/fullyConnected/dropout/div_grad/Sum"
op: "Sum"
input: "cost/gradients/pred/fullyConnected/dropout/div_grad/RealDiv"
input: "cost/gradients/pred/fullyConnected/dropout/div_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, u'cost/beta2_power/Assign': name: "cost/beta2_power/Assign"
op: "Assign"
input: "cost/beta2_power"
input: "cost/beta2_power/initial_value"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'weights/wc1/read': name: "weights/wc1/read"
op: "Identity"
input: "weights/wc1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
, u'save_1/MergeV2Checkpoints/checkpoint_prefixes': name: "save_1/MergeV2Checkpoints/checkpoint_prefixes"
op: "Pack"
input: "save_1/ShardedFilename"
input: "^save_1/control_dependency"
attr {
  key: "N"
  value {
    i: 1
  }
}
attr {
  key: "T"
  value {
    type: DT_STRING
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}
, u'cost/cost/Reshape': name: "cost/cost/Reshape"
op: "Reshape"
input: "pred/fullyConnected/Add_1"
input: "cost/cost/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
, u'sensitivity/ArgMax': name: "sensitivity/ArgMax"
op: "ArgMax"
input: "pred/fullyConnected/Add_1"
input: "sensitivity/ArgMax/dimension"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
attr {
  key: "output_type"
  value {
    type: DT_INT64
  }
}
, u'biases/bd1/Adam/Initializer/zeros/Const': name: "biases/bd1/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, u'biases/bc2': name: "biases/bc2"
op: "VariableV2"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'biases/bc1': name: "biases/bc1"
op: "VariableV2"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'save_1/Assign_23': name: "save_1/Assign_23"
op: "Assign"
input: "weights/wd1"
input: "save_1/RestoreV2:23"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'sensitivity/Mul': name: "sensitivity/Mul"
op: "Mul"
input: "sensitivity/Reshape"
input: "sensitivity/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
, u'pred/fullyConnected/Add_1': name: "pred/fullyConnected/Add_1"
op: "Add"
input: "pred/fullyConnected/MatMul_1"
input: "biases/outB/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 2
        }
      }
    }
  }
}
, u'sensitivity/Slice': name: "sensitivity/Slice"
op: "Slice"
input: "input/y"
input: "sensitivity/Slice/begin"
input: "sensitivity/Slice/size"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
, u'pred/fullyConnected/MatMul': name: "pred/fullyConnected/MatMul"
op: "MatMul"
input: "pred/fullyConnected/Reshape"
input: "weights/wd1/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, u'specificity/Sum_1': name: "specificity/Sum_1"
op: "Sum"
input: "specificity/Reshape"
input: "specificity/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/mul_grad/Mul_1': name: "cost/gradients/pred/fullyConnected/dropout/mul_grad/Mul_1"
op: "Mul"
input: "pred/fullyConnected/dropout/div"
input: "cost/gradients/pred/fullyConnected/MatMul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
, u'weights/wd1/Adam/Initializer/zeros/shape_as_tensor': name: "weights/wd1/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\200%\000\000\000\004\000\000"
    }
  }
}
, u'cost/gradients/pred/fullyConnected/Add_grad/BroadcastGradientArgs': name: "cost/gradients/pred/fullyConnected/Add_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "cost/gradients/pred/fullyConnected/Add_grad/Shape"
input: "cost/gradients/pred/fullyConnected/Add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
, u'sensitivity/Reshape': name: "sensitivity/Reshape"
op: "Reshape"
input: "sensitivity/Slice"
input: "sensitivity/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
, u'biases/random_normal/shape': name: "biases/random_normal/shape"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 32
    }
  }
}
, u'cost/gradients/pred/fullyConnected/Add_1_grad/tuple/control_dependency_1': name: "cost/gradients/pred/fullyConnected/Add_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "cost/gradients/pred/fullyConnected/Add_1_grad/Reshape_1"
input: "^cost/gradients/pred/fullyConnected/Add_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/pred/fullyConnected/Add_1_grad/Reshape_1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
, u'Shape': name: "Shape"
op: "Shape"
input: "input/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, u'pred/conv1/Relu': name: "pred/conv1/Relu"
op: "Relu"
input: "pred/conv1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 600
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
, u'biases/random_normal_1/shape': name: "biases/random_normal_1/shape"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 64
    }
  }
}
, u'cost/gradients/pred/conv2/Relu_1_grad/ReluGrad': name: "cost/gradients/pred/conv2/Relu_1_grad/ReluGrad"
op: "ReluGrad"
input: "cost/gradients/pred/fullyConnected/Reshape_grad/Reshape"
input: "pred/conv2/Relu_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 150
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
}
, u'cost/cost/Slice_2': name: "cost/cost/Slice_2"
op: "Slice"
input: "cost/cost/Shape"
input: "cost/cost/Slice_2/begin"
input: "cost/cost/Slice_2/size"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
, u'cost/cost/Slice_1': name: "cost/cost/Slice_1"
op: "Slice"
input: "cost/cost/Shape_2"
input: "cost/cost/Slice_1/begin"
input: "cost/cost/Slice_1/size"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
, u'cost/gradients/cost/Mean_grad/Maximum/y': name: "cost/gradients/cost/Mean_grad/Maximum/y"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, u'input/X': name: "input/X"
op: "Placeholder"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 600
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: -1
      }
      dim {
        size: 600
      }
    }
  }
}
, u'save/RestoreV2/tensor_names': name: "save/RestoreV2/tensor_names"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 26
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 26
        }
      }
      string_val: "biases/bc1"
      string_val: "biases/bc1/Adam"
      string_val: "biases/bc1/Adam_1"
      string_val: "biases/bc2"
      string_val: "biases/bc2/Adam"
      string_val: "biases/bc2/Adam_1"
      string_val: "biases/bd1"
      string_val: "biases/bd1/Adam"
      string_val: "biases/bd1/Adam_1"
      string_val: "biases/outB"
      string_val: "biases/outB/Adam"
      string_val: "biases/outB/Adam_1"
      string_val: "cost/beta1_power"
      string_val: "cost/beta2_power"
      string_val: "weights/outW"
      string_val: "weights/outW/Adam"
      string_val: "weights/outW/Adam_1"
      string_val: "weights/wc1"
      string_val: "weights/wc1/Adam"
      string_val: "weights/wc1/Adam_1"
      string_val: "weights/wc2"
      string_val: "weights/wc2/Adam"
      string_val: "weights/wc2/Adam_1"
      string_val: "weights/wd1"
      string_val: "weights/wd1/Adam"
      string_val: "weights/wd1/Adam_1"
    }
  }
}
, u'specificity/Equal': name: "specificity/Equal"
op: "Equal"
input: "specificity/ArgMax"
input: "specificity/Equal/y"
attr {
  key: "T"
  value {
    type: DT_INT64
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
, u'save/Assign_18': name: "save/Assign_18"
op: "Assign"
input: "weights/wc1/Adam"
input: "save/RestoreV2:18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'cost/Adam/update_weights/outW/ApplyAdam': name: "cost/Adam/update_weights/outW/ApplyAdam"
op: "ApplyAdam"
input: "weights/outW"
input: "weights/outW/Adam"
input: "weights/outW/Adam_1"
input: "cost/beta1_power/read"
input: "cost/beta2_power/read"
input: "cost/Adam/learning_rate"
input: "cost/Adam/beta1"
input: "cost/Adam/beta2"
input: "cost/Adam/epsilon"
input: "cost/gradients/pred/fullyConnected/MatMul_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/outW"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, u'save_1/Const': name: "save_1/Const"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
      }
      string_val: "model"
    }
  }
}
, u'biases/random_normal_1/RandomStandardNormal': name: "biases/random_normal_1/RandomStandardNormal"
op: "RandomStandardNormal"
input: "biases/random_normal_1/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
, u'biases/outB/Adam_1/read': name: "biases/outB/Adam_1/read"
op: "Identity"
input: "biases/outB/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/outB"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
, u'biases/random_normal/RandomStandardNormal': name: "biases/random_normal/RandomStandardNormal"
op: "RandomStandardNormal"
input: "biases/random_normal/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
, u'input/y': name: "input/y"
op: "Placeholder"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: -1
      }
      dim {
        size: 2
      }
    }
  }
}
, u'save/Assign_15': name: "save/Assign_15"
op: "Assign"
input: "weights/outW/Adam"
input: "save/RestoreV2:15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/outW"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'weights/wd1/Adam_1/Initializer/zeros': name: "weights/wd1/Adam_1/Initializer/zeros"
op: "Fill"
input: "weights/wd1/Adam_1/Initializer/zeros/shape_as_tensor"
input: "weights/wd1/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, u'biases/bd1/Assign': name: "biases/bd1/Assign"
op: "Assign"
input: "biases/bd1"
input: "biases/random_normal_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'weights/random_normal/mean': name: "weights/random_normal/mean"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, u'weights/outW/Adam_1/Assign': name: "weights/outW/Adam_1/Assign"
op: "Assign"
input: "weights/outW/Adam_1"
input: "weights/outW/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/outW"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'cost/cost/concat': name: "cost/cost/concat"
op: "ConcatV2"
input: "cost/cost/concat/values_0"
input: "cost/cost/Slice"
input: "cost/cost/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
, u'save/Assign_11': name: "save/Assign_11"
op: "Assign"
input: "biases/outB/Adam_1"
input: "save/RestoreV2:11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/outB"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'cost/gradients/cost/cost_grad/ExpandDims_1/dim': name: "cost/gradients/cost/cost_grad/ExpandDims_1/dim"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, u'weights/wc1': name: "weights/wc1"
op: "VariableV2"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 5
      }
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'weights/outW/Adam/Initializer/zeros/Const': name: "weights/outW/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/outW"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, u'weights/wd1/read': name: "weights/wd1/read"
op: "Identity"
input: "weights/wd1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'cost/Adam': name: "cost/Adam"
op: "NoOp"
input: "^cost/Adam/Assign"
input: "^cost/Adam/Assign_1"
input: "^cost/Adam/update_biases/bc1/ApplyAdam"
input: "^cost/Adam/update_biases/bc2/ApplyAdam"
input: "^cost/Adam/update_biases/bd1/ApplyAdam"
input: "^cost/Adam/update_biases/outB/ApplyAdam"
input: "^cost/Adam/update_weights/outW/ApplyAdam"
input: "^cost/Adam/update_weights/wc1/ApplyAdam"
input: "^cost/Adam/update_weights/wc2/ApplyAdam"
input: "^cost/Adam/update_weights/wd1/ApplyAdam"
, u'cost/cost/Rank': name: "cost/cost/Rank"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, u'pred/conv2/Conv2D': name: "pred/conv2/Conv2D"
op: "Conv2D"
input: "pred/conv1/Relu_1"
input: "weights/wc2/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 300
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
, u'weights/random_normal_2/mul': name: "weights/random_normal_2/mul"
op: "Mul"
input: "weights/random_normal_2/RandomStandardNormal"
input: "weights/random_normal_2/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'biases/random_normal/stddev': name: "biases/random_normal/stddev"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/mul_grad/Shape': name: "cost/gradients/pred/fullyConnected/dropout/mul_grad/Shape"
op: "Shape"
input: "pred/fullyConnected/dropout/div"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, u'cost/gradients/pred/fullyConnected/MatMul_1_grad/tuple/control_dependency': name: "cost/gradients/pred/fullyConnected/MatMul_1_grad/tuple/control_dependency"
op: "Identity"
input: "cost/gradients/pred/fullyConnected/MatMul_1_grad/MatMul"
input: "^cost/gradients/pred/fullyConnected/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/pred/fullyConnected/MatMul_1_grad/MatMul"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'save_1/StringJoin': name: "save_1/StringJoin"
op: "StringJoin"
input: "save_1/Const"
input: "save_1/StringJoin/inputs_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "separator"
  value {
    s: ""
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/div_grad/mul': name: "cost/gradients/pred/fullyConnected/dropout/div_grad/mul"
op: "Mul"
input: "cost/gradients/pred/fullyConnected/dropout/mul_grad/tuple/control_dependency"
input: "cost/gradients/pred/fullyConnected/dropout/div_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
, u'specificity/specificity/tags': name: "specificity/specificity/tags"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
      }
      string_val: "specificity/specificity"
    }
  }
}
, u'weights/random_normal/mul': name: "weights/random_normal/mul"
op: "Mul"
input: "weights/random_normal/RandomStandardNormal"
input: "weights/random_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
, u'sensitivity/Sum_1': name: "sensitivity/Sum_1"
op: "Sum"
input: "sensitivity/Reshape"
input: "sensitivity/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, u'weights/wc2/Adam_1/Initializer/zeros': name: "weights/wc2/Adam_1/Initializer/zeros"
op: "Fill"
input: "weights/wc2/Adam_1/Initializer/zeros/shape_as_tensor"
input: "weights/wc2/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, u'pred/fullyConnected/dropout/Shape': name: "pred/fullyConnected/dropout/Shape"
op: "Shape"
input: "pred/fullyConnected/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, u'specificity/Sum': name: "specificity/Sum"
op: "Sum"
input: "specificity/Mul"
input: "specificity/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, u'sensitivity/Equal': name: "sensitivity/Equal"
op: "Equal"
input: "sensitivity/ArgMax"
input: "sensitivity/Equal/y"
attr {
  key: "T"
  value {
    type: DT_INT64
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
, u'cost/gradients/pred/conv2/BiasAdd_grad/tuple/group_deps': name: "cost/gradients/pred/conv2/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^cost/gradients/pred/conv2/BiasAdd_grad/BiasAddGrad"
input: "^cost/gradients/pred/conv2/Relu_grad/ReluGrad"
, u'biases/random_normal_2/shape': name: "biases/random_normal_2/shape"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1024
    }
  }
}
, u'biases/bd1/read': name: "biases/bd1/read"
op: "Identity"
input: "biases/bd1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'cost/beta1_power/read': name: "cost/beta1_power/read"
op: "Identity"
input: "cost/beta1_power"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'save/Assign_9': name: "save/Assign_9"
op: "Assign"
input: "biases/outB"
input: "save/RestoreV2:9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/outB"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'weights/wd1/Adam/Assign': name: "weights/wd1/Adam/Assign"
op: "Assign"
input: "weights/wd1/Adam"
input: "weights/wd1/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'specificity/Equal/y': name: "specificity/Equal/y"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT64
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT64
      tensor_shape {
      }
      int64_val: 0
    }
  }
}
, u'save/Assign_5': name: "save/Assign_5"
op: "Assign"
input: "biases/bc2/Adam_1"
input: "save/RestoreV2:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save/Assign_4': name: "save/Assign_4"
op: "Assign"
input: "biases/bc2/Adam"
input: "save/RestoreV2:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'cost/gradients/cost/Mean_grad/Reshape/shape': name: "cost/gradients/cost/Mean_grad/Reshape/shape"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, u'save/Assign_6': name: "save/Assign_6"
op: "Assign"
input: "biases/bd1"
input: "save/RestoreV2:6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save/Assign_1': name: "save/Assign_1"
op: "Assign"
input: "biases/bc1/Adam"
input: "save/RestoreV2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'strided_slice/stack_1': name: "strided_slice/stack_1"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, u'save/Assign_3': name: "save/Assign_3"
op: "Assign"
input: "biases/bc2"
input: "save/RestoreV2:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'pred/fullyConnected/dropout/random_uniform/min': name: "pred/fullyConnected/dropout/random_uniform/min"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, u'weights/random_normal_2/stddev': name: "weights/random_normal_2/stddev"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, u'weights/wd1/Adam/read': name: "weights/wd1/Adam/read"
op: "Identity"
input: "weights/wd1/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'biases/bc2/Adam': name: "biases/bc2/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'cost/cost/Slice_1/size': name: "cost/cost/Slice_1/size"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, u'sensitivity/div': name: "sensitivity/div"
op: "RealDiv"
input: "sensitivity/Sum"
input: "sensitivity/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'pred/conv1/MaxPool': name: "pred/conv1/MaxPool"
op: "MaxPool"
input: "pred/conv1/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 300
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 1
      i: 1
    }
  }
}
, u'biases/random_normal_3/shape': name: "biases/random_normal_3/shape"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}
, u'cost/gradients/cost/cost_grad/tuple/control_dependency': name: "cost/gradients/cost/cost_grad/tuple/control_dependency"
op: "Identity"
input: "cost/gradients/cost/cost_grad/mul"
input: "^cost/gradients/cost/cost_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/cost/cost_grad/mul"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
, u'cost/Adam/Assign_1': name: "cost/Adam/Assign_1"
op: "Assign"
input: "cost/beta2_power"
input: "cost/Adam/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save_1/Assign_19': name: "save_1/Assign_19"
op: "Assign"
input: "weights/wc1/Adam_1"
input: "save_1/RestoreV2:19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save_1/Assign_18': name: "save_1/Assign_18"
op: "Assign"
input: "weights/wc1/Adam"
input: "save_1/RestoreV2:18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'weights/random_normal_2/mean': name: "weights/random_normal_2/mean"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, u'weights/wc2/Adam/read': name: "weights/wc2/Adam/read"
op: "Identity"
input: "weights/wc2/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
, u'save_1/Assign_13': name: "save_1/Assign_13"
op: "Assign"
input: "cost/beta2_power"
input: "save_1/RestoreV2:13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'cost/gradients/cost/cost/Reshape_grad/Shape': name: "cost/gradients/cost/cost/Reshape_grad/Shape"
op: "Shape"
input: "pred/fullyConnected/Add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, u'save_1/Assign_11': name: "save_1/Assign_11"
op: "Assign"
input: "biases/outB/Adam_1"
input: "save_1/RestoreV2:11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/outB"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'specificity/ArgMax': name: "specificity/ArgMax"
op: "ArgMax"
input: "pred/fullyConnected/Add_1"
input: "specificity/ArgMax/dimension"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
attr {
  key: "output_type"
  value {
    type: DT_INT64
  }
}
, u'save_1/Assign_17': name: "save_1/Assign_17"
op: "Assign"
input: "weights/wc1"
input: "save_1/RestoreV2:17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'cost/gradients/cost/Mean_grad/Const_1': name: "cost/gradients/cost/Mean_grad/Const_1"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, u'save_1/Assign_15': name: "save_1/Assign_15"
op: "Assign"
input: "weights/outW/Adam"
input: "save_1/RestoreV2:15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/outW"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save_1/Assign_14': name: "save_1/Assign_14"
op: "Assign"
input: "weights/outW"
input: "save_1/RestoreV2:14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/outW"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save_1/restore_shard': name: "save_1/restore_shard"
op: "NoOp"
input: "^save_1/Assign"
input: "^save_1/Assign_1"
input: "^save_1/Assign_10"
input: "^save_1/Assign_11"
input: "^save_1/Assign_12"
input: "^save_1/Assign_13"
input: "^save_1/Assign_14"
input: "^save_1/Assign_15"
input: "^save_1/Assign_16"
input: "^save_1/Assign_17"
input: "^save_1/Assign_18"
input: "^save_1/Assign_19"
input: "^save_1/Assign_2"
input: "^save_1/Assign_20"
input: "^save_1/Assign_21"
input: "^save_1/Assign_22"
input: "^save_1/Assign_23"
input: "^save_1/Assign_24"
input: "^save_1/Assign_25"
input: "^save_1/Assign_3"
input: "^save_1/Assign_4"
input: "^save_1/Assign_5"
input: "^save_1/Assign_6"
input: "^save_1/Assign_7"
input: "^save_1/Assign_8"
input: "^save_1/Assign_9"
, u'cost/cost/Sub_2/y': name: "cost/cost/Sub_2/y"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, u'cost/cost/Sub_1': name: "cost/cost/Sub_1"
op: "Sub"
input: "cost/cost/Rank_2"
input: "cost/cost/Sub_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'cost/cost/Sub_2': name: "cost/cost/Sub_2"
op: "Sub"
input: "cost/cost/Rank"
input: "cost/cost/Sub_2/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'save_1/RestoreV2/shape_and_slices': name: "save_1/RestoreV2/shape_and_slices"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 26
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 26
        }
      }
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
    }
  }
}
, u'weights/wc1/Adam_1': name: "weights/wc1/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 5
      }
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'sensitivity/Cast': name: "sensitivity/Cast"
op: "Cast"
input: "sensitivity/Equal"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
, u'weights/outW/Adam/read': name: "weights/outW/Adam/read"
op: "Identity"
input: "weights/outW/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/outW"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
, u'save/Assign': name: "save/Assign"
op: "Assign"
input: "biases/bc1"
input: "save/RestoreV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'biases/bc1/Adam/Assign': name: "biases/bc1/Adam/Assign"
op: "Assign"
input: "biases/bc1/Adam"
input: "biases/bc1/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'cost/cost/Slice_2/size': name: "cost/cost/Slice_2/size"
op: "Pack"
input: "cost/cost/Sub_2"
attr {
  key: "N"
  value {
    i: 1
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}
, u'biases/bc1/Adam_1/Assign': name: "biases/bc1/Adam_1/Assign"
op: "Assign"
input: "biases/bc1/Adam_1"
input: "biases/bc1/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'weights/random_normal_1/mean': name: "weights/random_normal_1/mean"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, u'cost/gradients/pred/conv1/Conv2D_grad/ShapeN': name: "cost/gradients/pred/conv1/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "pred/reshape/Reshape"
input: "weights/wc1/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 4
        }
      }
      shape {
        dim {
          size: 4
        }
      }
    }
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, u'cost/gradients/pred/fullyConnected/Add_grad/tuple/group_deps': name: "cost/gradients/pred/fullyConnected/Add_grad/tuple/group_deps"
op: "NoOp"
input: "^cost/gradients/pred/fullyConnected/Add_grad/Reshape"
input: "^cost/gradients/pred/fullyConnected/Add_grad/Reshape_1"
, u'cost/gradients/pred/fullyConnected/MatMul_1_grad/tuple/control_dependency_1': name: "cost/gradients/pred/fullyConnected/MatMul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "cost/gradients/pred/fullyConnected/MatMul_1_grad/MatMul_1"
input: "^cost/gradients/pred/fullyConnected/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/pred/fullyConnected/MatMul_1_grad/MatMul_1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
, u'weights/wc1/Adam/Assign': name: "weights/wc1/Adam/Assign"
op: "Assign"
input: "weights/wc1/Adam"
input: "weights/wc1/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/div_grad/Sum_1': name: "cost/gradients/pred/fullyConnected/dropout/div_grad/Sum_1"
op: "Sum"
input: "cost/gradients/pred/fullyConnected/dropout/div_grad/mul"
input: "cost/gradients/pred/fullyConnected/dropout/div_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, u'weights/wc2/Adam_1/Initializer/zeros/Const': name: "weights/wc2/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, u'cost/gradients/cost/cost_grad/mul_1': name: "cost/gradients/cost/cost_grad/mul_1"
op: "Mul"
input: "cost/gradients/cost/cost_grad/ExpandDims_1"
input: "cost/gradients/cost/cost_grad/Neg"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
, u'weights/wd1/Adam/Initializer/zeros/Const': name: "weights/wd1/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, u'biases/bc1/Adam_1/read': name: "biases/bc1/Adam_1/read"
op: "Identity"
input: "biases/bc1/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
, u'cost/gradients/pred/conv2/Conv2D_grad/ShapeN': name: "cost/gradients/pred/conv2/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "pred/conv1/Relu_1"
input: "weights/wc2/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 4
        }
      }
      shape {
        dim {
          size: 4
        }
      }
    }
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, u'cost/gradients/pred/fullyConnected/Reshape_grad/Shape': name: "cost/gradients/pred/fullyConnected/Reshape_grad/Shape"
op: "Shape"
input: "pred/conv2/Relu_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/mul_grad/Mul': name: "cost/gradients/pred/fullyConnected/dropout/mul_grad/Mul"
op: "Mul"
input: "cost/gradients/pred/fullyConnected/MatMul_1_grad/tuple/control_dependency"
input: "pred/fullyConnected/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
, u'pred/conv1/Conv2D': name: "pred/conv1/Conv2D"
op: "Conv2D"
input: "pred/reshape/Reshape"
input: "weights/wc1/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 600
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
, u'specificity/ArgMax/dimension': name: "specificity/ArgMax/dimension"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, u'pred/fullyConnected/dropout/add': name: "pred/fullyConnected/dropout/add"
op: "Add"
input: "input/drop"
input: "pred/fullyConnected/dropout/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
, u'cost/gradients/pred/conv2/MaxPool_grad/MaxPoolGrad': name: "cost/gradients/pred/conv2/MaxPool_grad/MaxPoolGrad"
op: "MaxPoolGrad"
input: "pred/conv2/Relu"
input: "pred/conv2/MaxPool"
input: "cost/gradients/pred/conv2/Relu_1_grad/ReluGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 300
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 1
      i: 1
    }
  }
}
, u'cost/gradients/cost/cost_grad/ExpandDims_1': name: "cost/gradients/cost/cost_grad/ExpandDims_1"
op: "ExpandDims"
input: "cost/gradients/cost/cost/Reshape_2_grad/Reshape"
input: "cost/gradients/cost/cost_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/div_grad/Shape': name: "cost/gradients/pred/fullyConnected/dropout/div_grad/Shape"
op: "Shape"
input: "pred/fullyConnected/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, u'cost/gradients/pred/conv1/Relu_1_grad/ReluGrad': name: "cost/gradients/pred/conv1/Relu_1_grad/ReluGrad"
op: "ReluGrad"
input: "cost/gradients/pred/conv2/Conv2D_grad/tuple/control_dependency"
input: "pred/conv1/Relu_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 300
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
, u'specificity/Slice': name: "specificity/Slice"
op: "Slice"
input: "input/y"
input: "specificity/Slice/begin"
input: "specificity/Slice/size"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
, u'cost/gradients/pred/fullyConnected/Add_grad/Sum_1': name: "cost/gradients/pred/fullyConnected/Add_grad/Sum_1"
op: "Sum"
input: "cost/gradients/pred/fullyConnected/Relu_grad/ReluGrad"
input: "cost/gradients/pred/fullyConnected/Add_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, u'save_1/Assign_12': name: "save_1/Assign_12"
op: "Assign"
input: "cost/beta1_power"
input: "save_1/RestoreV2:12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'weights/wd1': name: "weights/wd1"
op: "VariableV2"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 9600
      }
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'weights/wc2/Adam_1/Assign': name: "weights/wc2/Adam_1/Assign"
op: "Assign"
input: "weights/wc2/Adam_1"
input: "weights/wc2/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'biases/random_normal/mul': name: "biases/random_normal/mul"
op: "Mul"
input: "biases/random_normal/RandomStandardNormal"
input: "biases/random_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
, u'biases/bc2/Adam_1/Initializer/zeros': name: "biases/bc2/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 64
        }
      }
      float_val: 0.0
    }
  }
}
, u'cost/gradients/cost/cost/Reshape_grad/Reshape': name: "cost/gradients/cost/cost/Reshape_grad/Reshape"
op: "Reshape"
input: "cost/gradients/cost/cost_grad/tuple/control_dependency"
input: "cost/gradients/cost/cost/Reshape_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 2
        }
      }
    }
  }
}
, u'weights/wd1/Adam_1/read': name: "weights/wd1/Adam_1/read"
op: "Identity"
input: "weights/wd1/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'cost/gradients/pred/conv2/Relu_grad/ReluGrad': name: "cost/gradients/pred/conv2/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "cost/gradients/pred/conv2/MaxPool_grad/MaxPoolGrad"
input: "pred/conv2/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 300
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
}
, u'biases/random_normal_2/RandomStandardNormal': name: "biases/random_normal_2/RandomStandardNormal"
op: "RandomStandardNormal"
input: "biases/random_normal_2/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
, u'cost/gradients/pred/fullyConnected/Add_1_grad/Shape_1': name: "cost/gradients/pred/fullyConnected/Add_1_grad/Shape_1"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}
, u'save/control_dependency': name: "save/control_dependency"
op: "Identity"
input: "save/Const"
input: "^save/SaveV2"
attr {
  key: "T"
  value {
    type: DT_STRING
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@save/Const"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/div_grad/tuple/control_dependency': name: "cost/gradients/pred/fullyConnected/dropout/div_grad/tuple/control_dependency"
op: "Identity"
input: "cost/gradients/pred/fullyConnected/dropout/div_grad/Reshape"
input: "^cost/gradients/pred/fullyConnected/dropout/div_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/pred/fullyConnected/dropout/div_grad/Reshape"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'biases/outB': name: "biases/outB"
op: "VariableV2"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 2
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'cost/gradients/zeros_like': name: "cost/gradients/zeros_like"
op: "ZerosLike"
input: "cost/cost:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
, u'biases/random_normal': name: "biases/random_normal"
op: "Add"
input: "biases/random_normal/mul"
input: "biases/random_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
, u'weights/random_normal_2/RandomStandardNormal': name: "weights/random_normal_2/RandomStandardNormal"
op: "RandomStandardNormal"
input: "weights/random_normal_2/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
, u'cost/cost/concat/values_0': name: "cost/cost/concat/values_0"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, u'pred/fullyConnected/MatMul_1': name: "pred/fullyConnected/MatMul_1"
op: "MatMul"
input: "pred/fullyConnected/dropout/mul"
input: "weights/outW/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, u'cost/cost/concat_1/values_0': name: "cost/cost/concat_1/values_0"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, u'cost/cost/Sub_1/y': name: "cost/cost/Sub_1/y"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, u'cost/gradients/pred/fullyConnected/Add_1_grad/tuple/control_dependency': name: "cost/gradients/pred/fullyConnected/Add_1_grad/tuple/control_dependency"
op: "Identity"
input: "cost/gradients/pred/fullyConnected/Add_1_grad/Reshape"
input: "^cost/gradients/pred/fullyConnected/Add_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/pred/fullyConnected/Add_1_grad/Reshape"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 2
        }
      }
    }
  }
}
, u'cost/beta1_power/Assign': name: "cost/beta1_power/Assign"
op: "Assign"
input: "cost/beta1_power"
input: "cost/beta1_power/initial_value"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'biases/bd1': name: "biases/bd1"
op: "VariableV2"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'input/drop': name: "input/drop"
op: "Placeholder"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      unknown_rank: true
    }
  }
}
, u'cost/cost/concat/axis': name: "cost/cost/concat/axis"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, u'pred/fullyConnected/dropout/random_uniform/RandomUniform': name: "pred/fullyConnected/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "pred/fullyConnected/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
, u'specificity/Const': name: "specificity/Const"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, u'save_1/Assign_5': name: "save_1/Assign_5"
op: "Assign"
input: "biases/bc2/Adam_1"
input: "save_1/RestoreV2:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'cost/gradients/pred/fullyConnected/MatMul_grad/tuple/control_dependency': name: "cost/gradients/pred/fullyConnected/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "cost/gradients/pred/fullyConnected/MatMul_grad/MatMul"
input: "^cost/gradients/pred/fullyConnected/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/pred/fullyConnected/MatMul_grad/MatMul"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 9600
        }
      }
    }
  }
}
, u'pred/conv1/Relu_1': name: "pred/conv1/Relu_1"
op: "Relu"
input: "pred/conv1/MaxPool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 300
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
, u'save_1/Assign_16': name: "save_1/Assign_16"
op: "Assign"
input: "weights/outW/Adam_1"
input: "save_1/RestoreV2:16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/outW"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'cost/gradients/cost/Mean_grad/Reshape': name: "cost/gradients/cost/Mean_grad/Reshape"
op: "Reshape"
input: "cost/gradients/Fill"
input: "cost/gradients/cost/Mean_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
, u'pred/fullyConnected/dropout/random_uniform/max': name: "pred/fullyConnected/dropout/random_uniform/max"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, u'weights/random_normal_2/shape': name: "weights/random_normal_2/shape"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\200%\000\000\000\004\000\000"
    }
  }
}
, u'biases/bc1/Adam/Initializer/zeros': name: "biases/bc1/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}
, u'save/restore_all': name: "save/restore_all"
op: "NoOp"
input: "^save/Assign"
input: "^save/Assign_1"
input: "^save/Assign_10"
input: "^save/Assign_11"
input: "^save/Assign_12"
input: "^save/Assign_13"
input: "^save/Assign_14"
input: "^save/Assign_15"
input: "^save/Assign_16"
input: "^save/Assign_17"
input: "^save/Assign_18"
input: "^save/Assign_19"
input: "^save/Assign_2"
input: "^save/Assign_20"
input: "^save/Assign_21"
input: "^save/Assign_22"
input: "^save/Assign_23"
input: "^save/Assign_24"
input: "^save/Assign_25"
input: "^save/Assign_3"
input: "^save/Assign_4"
input: "^save/Assign_5"
input: "^save/Assign_6"
input: "^save/Assign_7"
input: "^save/Assign_8"
input: "^save/Assign_9"
, u'cost/gradients/cost/cost_grad/tuple/control_dependency_1': name: "cost/gradients/cost/cost_grad/tuple/control_dependency_1"
op: "Identity"
input: "cost/gradients/cost/cost_grad/mul_1"
input: "^cost/gradients/cost/cost_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/cost/cost_grad/mul_1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
, u'biases/outB/read': name: "biases/outB/read"
op: "Identity"
input: "biases/outB"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/outB"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
, u'sensitivity/Reshape/shape': name: "sensitivity/Reshape/shape"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, u'save_1/ShardedFilename': name: "save_1/ShardedFilename"
op: "ShardedFilename"
input: "save_1/StringJoin"
input: "save_1/ShardedFilename/shard"
input: "save_1/num_shards"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'sensitivity/sensitivity': name: "sensitivity/sensitivity"
op: "ScalarSummary"
input: "sensitivity/sensitivity/tags"
input: "sensitivity/div"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'specificity/Slice/size/1': name: "specificity/Slice/size/1"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, u'biases/bc2/Adam/Assign': name: "biases/bc2/Adam/Assign"
op: "Assign"
input: "biases/bc2/Adam"
input: "biases/bc2/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/div_grad/RealDiv_1': name: "cost/gradients/pred/fullyConnected/dropout/div_grad/RealDiv_1"
op: "RealDiv"
input: "cost/gradients/pred/fullyConnected/dropout/div_grad/Neg"
input: "input/drop"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/div_grad/RealDiv_2': name: "cost/gradients/pred/fullyConnected/dropout/div_grad/RealDiv_2"
op: "RealDiv"
input: "cost/gradients/pred/fullyConnected/dropout/div_grad/RealDiv_1"
input: "input/drop"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
, u'strided_slice/stack': name: "strided_slice/stack"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, u'cost/Adam/update_biases/outB/ApplyAdam': name: "cost/Adam/update_biases/outB/ApplyAdam"
op: "ApplyAdam"
input: "biases/outB"
input: "biases/outB/Adam"
input: "biases/outB/Adam_1"
input: "cost/beta1_power/read"
input: "cost/beta2_power/read"
input: "cost/Adam/learning_rate"
input: "cost/Adam/beta1"
input: "cost/Adam/beta2"
input: "cost/Adam/epsilon"
input: "cost/gradients/pred/fullyConnected/Add_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/outB"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, u'weights/outW/Adam_1/Initializer/zeros': name: "weights/outW/Adam_1/Initializer/zeros"
op: "Fill"
input: "weights/outW/Adam_1/Initializer/zeros/shape_as_tensor"
input: "weights/outW/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/outW"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, u'weights/wd1/Assign': name: "weights/wd1/Assign"
op: "Assign"
input: "weights/wd1"
input: "weights/random_normal_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'cost/gradients/pred/conv2/BiasAdd_grad/BiasAddGrad': name: "cost/gradients/pred/conv2/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "cost/gradients/pred/conv2/Relu_grad/ReluGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, u'cost/beta2_power/read': name: "cost/beta2_power/read"
op: "Identity"
input: "cost/beta2_power"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/mul_grad/BroadcastGradientArgs': name: "cost/gradients/pred/fullyConnected/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "cost/gradients/pred/fullyConnected/dropout/mul_grad/Shape"
input: "cost/gradients/pred/fullyConnected/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
, u'weights/random_normal_1/shape': name: "weights/random_normal_1/shape"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\005\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
    }
  }
}
, u'weights/wc1/Adam/read': name: "weights/wc1/Adam/read"
op: "Identity"
input: "weights/wc1/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
, u'cost/gradients/cost/cost_grad/ExpandDims': name: "cost/gradients/cost/cost_grad/ExpandDims"
op: "ExpandDims"
input: "cost/gradients/cost/cost/Reshape_2_grad/Reshape"
input: "cost/gradients/cost/cost_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
, u'cost/gradients/pred/fullyConnected/Add_grad/Sum': name: "cost/gradients/pred/fullyConnected/Add_grad/Sum"
op: "Sum"
input: "cost/gradients/pred/fullyConnected/Relu_grad/ReluGrad"
input: "cost/gradients/pred/fullyConnected/Add_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, u'strided_slice/stack_2': name: "strided_slice/stack_2"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, u'cost/gradients/pred/conv1/BiasAdd_grad/BiasAddGrad': name: "cost/gradients/pred/conv1/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "cost/gradients/pred/conv1/Relu_grad/ReluGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, u'cost/gradients/pred/fullyConnected/MatMul_grad/tuple/group_deps': name: "cost/gradients/pred/fullyConnected/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^cost/gradients/pred/fullyConnected/MatMul_grad/MatMul"
input: "^cost/gradients/pred/fullyConnected/MatMul_grad/MatMul_1"
, u'cost/Adam/update_weights/wc2/ApplyAdam': name: "cost/Adam/update_weights/wc2/ApplyAdam"
op: "ApplyAdam"
input: "weights/wc2"
input: "weights/wc2/Adam"
input: "weights/wc2/Adam_1"
input: "cost/beta1_power/read"
input: "cost/beta2_power/read"
input: "cost/Adam/learning_rate"
input: "cost/Adam/beta1"
input: "cost/Adam/beta2"
input: "cost/Adam/epsilon"
input: "cost/gradients/pred/conv2/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, u'cost/beta1_power/initial_value': name: "cost/beta1_power/initial_value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.899999976158
    }
  }
}
, u'save_1/Identity': name: "save_1/Identity"
op: "Identity"
input: "save_1/Const"
input: "^save_1/MergeV2Checkpoints"
input: "^save_1/control_dependency"
attr {
  key: "T"
  value {
    type: DT_STRING
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'cost/gradients/pred/fullyConnected/Add_grad/tuple/control_dependency_1': name: "cost/gradients/pred/fullyConnected/Add_grad/tuple/control_dependency_1"
op: "Identity"
input: "cost/gradients/pred/fullyConnected/Add_grad/Reshape_1"
input: "^cost/gradients/pred/fullyConnected/Add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/pred/fullyConnected/Add_grad/Reshape_1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'weights/wc2/Adam': name: "weights/wc2/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 5
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'specificity/Reshape/shape': name: "specificity/Reshape/shape"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, u'cost/gradients/grad_ys_0': name: "cost/gradients/grad_ys_0"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, u'biases/random_normal_2/mul': name: "biases/random_normal_2/mul"
op: "Mul"
input: "biases/random_normal_2/RandomStandardNormal"
input: "biases/random_normal_2/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'cost/gradients/pred/conv2/Conv2D_grad/tuple/control_dependency': name: "cost/gradients/pred/conv2/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "cost/gradients/pred/conv2/Conv2D_grad/Conv2DBackpropInput"
input: "^cost/gradients/pred/conv2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/pred/conv2/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 300
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
, u'cost/cost/concat_1/axis': name: "cost/cost/concat_1/axis"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, u'weights/random_normal/stddev': name: "weights/random_normal/stddev"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, u'biases/bd1/Adam_1/Initializer/zeros': name: "biases/bd1/Adam_1/Initializer/zeros"
op: "Fill"
input: "biases/bd1/Adam_1/Initializer/zeros/shape_as_tensor"
input: "biases/bd1/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, u'biases/random_normal_2/mean': name: "biases/random_normal_2/mean"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, u'score': name: "score"
op: "ScalarSummary"
input: "score/tags"
input: "div"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'weights/random_normal_1/stddev': name: "weights/random_normal_1/stddev"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, u'biases/bd1/Adam/Initializer/zeros': name: "biases/bd1/Adam/Initializer/zeros"
op: "Fill"
input: "biases/bd1/Adam/Initializer/zeros/shape_as_tensor"
input: "biases/bd1/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, u'sensitivity/Const': name: "sensitivity/Const"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, u'biases/bd1/Adam': name: "biases/bd1/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'cost/Adam/mul': name: "cost/Adam/mul"
op: "Mul"
input: "cost/beta1_power/read"
input: "cost/Adam/beta1"
input: "^cost/Adam/update_biases/bc1/ApplyAdam"
input: "^cost/Adam/update_biases/bc2/ApplyAdam"
input: "^cost/Adam/update_biases/bd1/ApplyAdam"
input: "^cost/Adam/update_biases/outB/ApplyAdam"
input: "^cost/Adam/update_weights/outW/ApplyAdam"
input: "^cost/Adam/update_weights/wc1/ApplyAdam"
input: "^cost/Adam/update_weights/wc2/ApplyAdam"
input: "^cost/Adam/update_weights/wd1/ApplyAdam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'weights/wc1/Adam_1/read': name: "weights/wc1/Adam_1/read"
op: "Identity"
input: "weights/wc1/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
, u'cost/gradients/pred/conv1/Conv2D_grad/tuple/control_dependency_1': name: "cost/gradients/pred/conv1/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "cost/gradients/pred/conv1/Conv2D_grad/Conv2DBackpropFilter"
input: "^cost/gradients/pred/conv1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/pred/conv1/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
, u'cost/gradients/pred/fullyConnected/Add_1_grad/Sum_1': name: "cost/gradients/pred/fullyConnected/Add_1_grad/Sum_1"
op: "Sum"
input: "cost/gradients/cost/cost/Reshape_grad/Reshape"
input: "cost/gradients/pred/fullyConnected/Add_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, u'pred/conv2/Relu': name: "pred/conv2/Relu"
op: "Relu"
input: "pred/conv2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 300
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
}
, u'biases/bc2/Adam/read': name: "biases/bc2/Adam/read"
op: "Identity"
input: "biases/bc2/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
, u'save_1/SaveV2/shape_and_slices': name: "save_1/SaveV2/shape_and_slices"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 26
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 26
        }
      }
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
    }
  }
}
, u'weights/random_normal_1/mul': name: "weights/random_normal_1/mul"
op: "Mul"
input: "weights/random_normal_1/RandomStandardNormal"
input: "weights/random_normal_1/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
, u'biases/bc1/Adam/read': name: "biases/bc1/Adam/read"
op: "Identity"
input: "biases/bc1/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
, u'biases/random_normal_1/mean': name: "biases/random_normal_1/mean"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, u'weights/wc2/Adam/Assign': name: "weights/wc2/Adam/Assign"
op: "Assign"
input: "weights/wc2/Adam"
input: "weights/wc2/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'cost/cost': name: "cost/cost"
op: "SoftmaxCrossEntropyWithLogits"
input: "cost/cost/Reshape"
input: "cost/cost/Reshape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
, u'cost/Adam/update_biases/bd1/ApplyAdam': name: "cost/Adam/update_biases/bd1/ApplyAdam"
op: "ApplyAdam"
input: "biases/bd1"
input: "biases/bd1/Adam"
input: "biases/bd1/Adam_1"
input: "cost/beta1_power/read"
input: "cost/beta2_power/read"
input: "cost/Adam/learning_rate"
input: "cost/Adam/beta1"
input: "cost/Adam/beta2"
input: "cost/Adam/epsilon"
input: "cost/gradients/pred/fullyConnected/Add_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, u'save/SaveV2': name: "save/SaveV2"
op: "SaveV2"
input: "save/Const"
input: "save/SaveV2/tensor_names"
input: "save/SaveV2/shape_and_slices"
input: "biases/bc1"
input: "biases/bc1/Adam"
input: "biases/bc1/Adam_1"
input: "biases/bc2"
input: "biases/bc2/Adam"
input: "biases/bc2/Adam_1"
input: "biases/bd1"
input: "biases/bd1/Adam"
input: "biases/bd1/Adam_1"
input: "biases/outB"
input: "biases/outB/Adam"
input: "biases/outB/Adam_1"
input: "cost/beta1_power"
input: "cost/beta2_power"
input: "weights/outW"
input: "weights/outW/Adam"
input: "weights/outW/Adam_1"
input: "weights/wc1"
input: "weights/wc1/Adam"
input: "weights/wc1/Adam_1"
input: "weights/wc2"
input: "weights/wc2/Adam"
input: "weights/wc2/Adam_1"
input: "weights/wd1"
input: "weights/wd1/Adam"
input: "weights/wd1/Adam_1"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
    }
  }
}
, u'weights/random_normal_1/RandomStandardNormal': name: "weights/random_normal_1/RandomStandardNormal"
op: "RandomStandardNormal"
input: "weights/random_normal_1/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
, u'cost/gradients/cost/Mean_grad/Shape_2': name: "cost/gradients/cost/Mean_grad/Shape_2"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, u'cost/gradients/cost/Mean_grad/Shape_1': name: "cost/gradients/cost/Mean_grad/Shape_1"
op: "Shape"
input: "cost/cost/Reshape_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, u'save_1/Assign_24': name: "save_1/Assign_24"
op: "Assign"
input: "weights/wd1/Adam"
input: "save_1/RestoreV2:24"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save_1/Assign_25': name: "save_1/Assign_25"
op: "Assign"
input: "weights/wd1/Adam_1"
input: "save_1/RestoreV2:25"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save_1/Assign_22': name: "save_1/Assign_22"
op: "Assign"
input: "weights/wc2/Adam_1"
input: "save_1/RestoreV2:22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/div_grad/Shape_1': name: "cost/gradients/pred/fullyConnected/dropout/div_grad/Shape_1"
op: "Shape"
input: "input/drop"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, u'cost/cost/Shape_1': name: "cost/cost/Shape_1"
op: "Shape"
input: "pred/fullyConnected/Add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, u'save_1/Assign_21': name: "save_1/Assign_21"
op: "Assign"
input: "weights/wc2/Adam"
input: "save_1/RestoreV2:21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'weights/wd1/Adam_1/Assign': name: "weights/wd1/Adam_1/Assign"
op: "Assign"
input: "weights/wd1/Adam_1"
input: "weights/wd1/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save_1/Assign_7': name: "save_1/Assign_7"
op: "Assign"
input: "biases/bd1/Adam"
input: "save_1/RestoreV2:7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'cost/gradients/pred/fullyConnected/Reshape_grad/Reshape': name: "cost/gradients/pred/fullyConnected/Reshape_grad/Reshape"
op: "Reshape"
input: "cost/gradients/pred/fullyConnected/MatMul_grad/tuple/control_dependency"
input: "cost/gradients/pred/fullyConnected/Reshape_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 150
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
}
, u'specificity/Cast': name: "specificity/Cast"
op: "Cast"
input: "specificity/Equal"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
, u'add': name: "add"
op: "Add"
input: "sensitivity/div"
input: "specificity/div"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'Merge/MergeSummary': name: "Merge/MergeSummary"
op: "MergeSummary"
input: "sensitivity/sensitivity"
input: "specificity/specificity"
input: "score"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'weights/wc1/Adam_1/Initializer/zeros': name: "weights/wc1/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/div_grad/RealDiv': name: "cost/gradients/pred/fullyConnected/dropout/div_grad/RealDiv"
op: "RealDiv"
input: "cost/gradients/pred/fullyConnected/dropout/mul_grad/tuple/control_dependency"
input: "input/drop"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
, u'cost/gradients/pred/fullyConnected/Add_1_grad/Shape': name: "cost/gradients/pred/fullyConnected/Add_1_grad/Shape"
op: "Shape"
input: "pred/fullyConnected/MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, u'biases/random_normal_1/mul': name: "biases/random_normal_1/mul"
op: "Mul"
input: "biases/random_normal_1/RandomStandardNormal"
input: "biases/random_normal_1/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
, u'cost/gradients/cost/Mean_grad/Cast': name: "cost/gradients/cost/Mean_grad/Cast"
op: "Cast"
input: "cost/gradients/cost/Mean_grad/floordiv"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'save_1/Assign_1': name: "save_1/Assign_1"
op: "Assign"
input: "biases/bc1/Adam"
input: "save_1/RestoreV2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'biases/random_normal/mean': name: "biases/random_normal/mean"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, u'cost/gradients/pred/fullyConnected/Add_1_grad/Reshape': name: "cost/gradients/pred/fullyConnected/Add_1_grad/Reshape"
op: "Reshape"
input: "cost/gradients/pred/fullyConnected/Add_1_grad/Sum"
input: "cost/gradients/pred/fullyConnected/Add_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 2
        }
      }
    }
  }
}
, u'cost/beta1_power': name: "cost/beta1_power"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'cost/cost/Slice/size': name: "cost/cost/Slice/size"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, u'cost/gradients/pred/fullyConnected/Add_1_grad/Sum': name: "cost/gradients/pred/fullyConnected/Add_1_grad/Sum"
op: "Sum"
input: "cost/gradients/cost/cost/Reshape_grad/Reshape"
input: "cost/gradients/pred/fullyConnected/Add_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, u'cost/gradients/pred/conv1/Conv2D_grad/Conv2DBackpropFilter': name: "cost/gradients/pred/conv1/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "pred/reshape/Reshape"
input: "cost/gradients/pred/conv1/Conv2D_grad/ShapeN:1"
input: "cost/gradients/pred/conv1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
, u'weights/wc2/Adam/Initializer/zeros/shape_as_tensor': name: "weights/wc2/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\005\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
    }
  }
}
, u'save_1/StringJoin/inputs_1': name: "save_1/StringJoin/inputs_1"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
      }
      string_val: "_temp_8f271068a95a4eeb84921c16166e0959/part"
    }
  }
}
, u'cost/gradients/pred/fullyConnected/Add_grad/Shape': name: "cost/gradients/pred/fullyConnected/Add_grad/Shape"
op: "Shape"
input: "pred/fullyConnected/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, u'biases/random_normal_2/stddev': name: "biases/random_normal_2/stddev"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, u'biases/bc1/Adam_1': name: "biases/bc1/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'weights/wc2/Adam_1/Initializer/zeros/shape_as_tensor': name: "weights/wc2/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\005\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
    }
  }
}
, u'cost/gradients/pred/fullyConnected/Relu_grad/ReluGrad': name: "cost/gradients/pred/fullyConnected/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "cost/gradients/pred/fullyConnected/dropout/div_grad/tuple/control_dependency"
input: "pred/fullyConnected/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'save_1/SaveV2/tensor_names': name: "save_1/SaveV2/tensor_names"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 26
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 26
        }
      }
      string_val: "biases/bc1"
      string_val: "biases/bc1/Adam"
      string_val: "biases/bc1/Adam_1"
      string_val: "biases/bc2"
      string_val: "biases/bc2/Adam"
      string_val: "biases/bc2/Adam_1"
      string_val: "biases/bd1"
      string_val: "biases/bd1/Adam"
      string_val: "biases/bd1/Adam_1"
      string_val: "biases/outB"
      string_val: "biases/outB/Adam"
      string_val: "biases/outB/Adam_1"
      string_val: "cost/beta1_power"
      string_val: "cost/beta2_power"
      string_val: "weights/outW"
      string_val: "weights/outW/Adam"
      string_val: "weights/outW/Adam_1"
      string_val: "weights/wc1"
      string_val: "weights/wc1/Adam"
      string_val: "weights/wc1/Adam_1"
      string_val: "weights/wc2"
      string_val: "weights/wc2/Adam"
      string_val: "weights/wc2/Adam_1"
      string_val: "weights/wd1"
      string_val: "weights/wd1/Adam"
      string_val: "weights/wd1/Adam_1"
    }
  }
}
, u'cost/gradients/pred/conv1/BiasAdd_grad/tuple/control_dependency_1': name: "cost/gradients/pred/conv1/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "cost/gradients/pred/conv1/BiasAdd_grad/BiasAddGrad"
input: "^cost/gradients/pred/conv1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/pred/conv1/BiasAdd_grad/BiasAddGrad"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
, u'save/SaveV2/tensor_names': name: "save/SaveV2/tensor_names"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 26
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 26
        }
      }
      string_val: "biases/bc1"
      string_val: "biases/bc1/Adam"
      string_val: "biases/bc1/Adam_1"
      string_val: "biases/bc2"
      string_val: "biases/bc2/Adam"
      string_val: "biases/bc2/Adam_1"
      string_val: "biases/bd1"
      string_val: "biases/bd1/Adam"
      string_val: "biases/bd1/Adam_1"
      string_val: "biases/outB"
      string_val: "biases/outB/Adam"
      string_val: "biases/outB/Adam_1"
      string_val: "cost/beta1_power"
      string_val: "cost/beta2_power"
      string_val: "weights/outW"
      string_val: "weights/outW/Adam"
      string_val: "weights/outW/Adam_1"
      string_val: "weights/wc1"
      string_val: "weights/wc1/Adam"
      string_val: "weights/wc1/Adam_1"
      string_val: "weights/wc2"
      string_val: "weights/wc2/Adam"
      string_val: "weights/wc2/Adam_1"
      string_val: "weights/wd1"
      string_val: "weights/wd1/Adam"
      string_val: "weights/wd1/Adam_1"
    }
  }
}
, u'cost/beta2_power': name: "cost/beta2_power"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'save/Assign_19': name: "save/Assign_19"
op: "Assign"
input: "weights/wc1/Adam_1"
input: "save/RestoreV2:19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save/Const': name: "save/Const"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
      }
      string_val: "model"
    }
  }
}
, u'save_1/control_dependency': name: "save_1/control_dependency"
op: "Identity"
input: "save_1/ShardedFilename"
input: "^save_1/SaveV2"
attr {
  key: "T"
  value {
    type: DT_STRING
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@save_1/ShardedFilename"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'sensitivity/sensitivity/tags': name: "sensitivity/sensitivity/tags"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
      }
      string_val: "sensitivity/sensitivity"
    }
  }
}
, u'biases/random_normal_3/mean': name: "biases/random_normal_3/mean"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, u'save/Assign_14': name: "save/Assign_14"
op: "Assign"
input: "weights/outW"
input: "save/RestoreV2:14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/outW"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save/Assign_17': name: "save/Assign_17"
op: "Assign"
input: "weights/wc1"
input: "save/RestoreV2:17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save/Assign_16': name: "save/Assign_16"
op: "Assign"
input: "weights/outW/Adam_1"
input: "save/RestoreV2:16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/outW"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'biases/bd1/Adam_1/Initializer/zeros/shape_as_tensor': name: "biases/bd1/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1024
    }
  }
}
, u'weights/wc2': name: "weights/wc2"
op: "VariableV2"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 5
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'weights/outW/Adam_1/Initializer/zeros/shape_as_tensor': name: "weights/outW/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/outW"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\004\000\000\002\000\000\000"
    }
  }
}
, u'save/Assign_12': name: "save/Assign_12"
op: "Assign"
input: "cost/beta1_power"
input: "save/RestoreV2:12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'pred/fullyConnected/Add': name: "pred/fullyConnected/Add"
op: "Add"
input: "pred/fullyConnected/MatMul"
input: "biases/bd1/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'pred/conv1/BiasAdd': name: "pred/conv1/BiasAdd"
op: "BiasAdd"
input: "pred/conv1/Conv2D"
input: "biases/bc1/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 600
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, u'cost/beta2_power/initial_value': name: "cost/beta2_power/initial_value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.999000012875
    }
  }
}
, u'biases/bc2/Adam/Initializer/zeros': name: "biases/bc2/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 64
        }
      }
      float_val: 0.0
    }
  }
}
, u'biases/bc2/Adam_1/read': name: "biases/bc2/Adam_1/read"
op: "Identity"
input: "biases/bc2/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
, u'pred/fullyConnected/dropout/random_uniform': name: "pred/fullyConnected/dropout/random_uniform"
op: "Add"
input: "pred/fullyConnected/dropout/random_uniform/mul"
input: "pred/fullyConnected/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/div_grad/tuple/group_deps': name: "cost/gradients/pred/fullyConnected/dropout/div_grad/tuple/group_deps"
op: "NoOp"
input: "^cost/gradients/pred/fullyConnected/dropout/div_grad/Reshape"
input: "^cost/gradients/pred/fullyConnected/dropout/div_grad/Reshape_1"
, u'weights/wc1/Adam': name: "weights/wc1/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 5
      }
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'cost/gradients/pred/conv2/Conv2D_grad/Conv2DBackpropFilter': name: "cost/gradients/pred/conv2/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "pred/conv1/Relu_1"
input: "cost/gradients/pred/conv2/Conv2D_grad/ShapeN:1"
input: "cost/gradients/pred/conv2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
, u'specificity/Slice/begin': name: "specificity/Slice/begin"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000"
    }
  }
}
, u'biases/random_normal_3/stddev': name: "biases/random_normal_3/stddev"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/div_grad/BroadcastGradientArgs': name: "cost/gradients/pred/fullyConnected/dropout/div_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "cost/gradients/pred/fullyConnected/dropout/div_grad/Shape"
input: "cost/gradients/pred/fullyConnected/dropout/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
, u'biases/outB/Adam_1': name: "biases/outB/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/outB"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 2
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'weights/outW/read': name: "weights/outW/read"
op: "Identity"
input: "weights/outW"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/outW"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
, u'div/y': name: "div/y"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 2.0
    }
  }
}
, u'pred/fullyConnected/dropout/mul': name: "pred/fullyConnected/dropout/mul"
op: "Mul"
input: "pred/fullyConnected/dropout/div"
input: "pred/fullyConnected/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'weights/wd1/Adam_1/Initializer/zeros/shape_as_tensor': name: "weights/wd1/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\200%\000\000\000\004\000\000"
    }
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/div_grad/Reshape_1': name: "cost/gradients/pred/fullyConnected/dropout/div_grad/Reshape_1"
op: "Reshape"
input: "cost/gradients/pred/fullyConnected/dropout/div_grad/Sum_1"
input: "cost/gradients/pred/fullyConnected/dropout/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
, u'cost/Adam/Assign': name: "cost/Adam/Assign"
op: "Assign"
input: "cost/beta1_power"
input: "cost/Adam/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'biases/bd1/Adam_1': name: "biases/bd1/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1024
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'biases/bd1/Adam_1/read': name: "biases/bd1/Adam_1/read"
op: "Identity"
input: "biases/bd1/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'cost/gradients/pred/fullyConnected/MatMul_grad/tuple/control_dependency_1': name: "cost/gradients/pred/fullyConnected/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "cost/gradients/pred/fullyConnected/MatMul_grad/MatMul_1"
input: "^cost/gradients/pred/fullyConnected/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/pred/fullyConnected/MatMul_grad/MatMul_1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'cost/gradients/pred/fullyConnected/MatMul_1_grad/MatMul': name: "cost/gradients/pred/fullyConnected/MatMul_1_grad/MatMul"
op: "MatMul"
input: "cost/gradients/pred/fullyConnected/Add_1_grad/tuple/control_dependency"
input: "weights/outW/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, u'cost/Adam/beta2': name: "cost/Adam/beta2"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.999000012875
    }
  }
}
, u'cost/Adam/beta1': name: "cost/Adam/beta1"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.899999976158
    }
  }
}
, u'cost/gradients/pred/fullyConnected/MatMul_1_grad/MatMul_1': name: "cost/gradients/pred/fullyConnected/MatMul_1_grad/MatMul_1"
op: "MatMul"
input: "pred/fullyConnected/dropout/mul"
input: "cost/gradients/pred/fullyConnected/Add_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, u'cost/gradients/cost/cost/Reshape_2_grad/Reshape': name: "cost/gradients/cost/cost/Reshape_2_grad/Reshape"
op: "Reshape"
input: "cost/gradients/cost/Mean_grad/truediv"
input: "cost/gradients/cost/cost/Reshape_2_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
, u'weights/wc2/Adam_1/read': name: "weights/wc2/Adam_1/read"
op: "Identity"
input: "weights/wc2/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
, u'weights/wd1/Adam_1/Initializer/zeros/Const': name: "weights/wd1/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, u'cost/Adam/learning_rate': name: "cost/Adam/learning_rate"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0010000000475
    }
  }
}
, u'biases/bc2/Adam_1': name: "biases/bc2/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'cost/gradients/pred/fullyConnected/Add_1_grad/BroadcastGradientArgs': name: "cost/gradients/pred/fullyConnected/Add_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "cost/gradients/pred/fullyConnected/Add_1_grad/Shape"
input: "cost/gradients/pred/fullyConnected/Add_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
, u'save_1/Assign_6': name: "save_1/Assign_6"
op: "Assign"
input: "biases/bd1"
input: "save_1/RestoreV2:6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/mul_grad/tuple/control_dependency_1': name: "cost/gradients/pred/fullyConnected/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "cost/gradients/pred/fullyConnected/dropout/mul_grad/Reshape_1"
input: "^cost/gradients/pred/fullyConnected/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/pred/fullyConnected/dropout/mul_grad/Reshape_1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
, u'save_1/Assign_4': name: "save_1/Assign_4"
op: "Assign"
input: "biases/bc2/Adam"
input: "save_1/RestoreV2:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save_1/Assign_3': name: "save_1/Assign_3"
op: "Assign"
input: "biases/bc2"
input: "save_1/RestoreV2:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save_1/Assign_2': name: "save_1/Assign_2"
op: "Assign"
input: "biases/bc1/Adam_1"
input: "save_1/RestoreV2:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'cost/Adam/update_biases/bc2/ApplyAdam': name: "cost/Adam/update_biases/bc2/ApplyAdam"
op: "ApplyAdam"
input: "biases/bc2"
input: "biases/bc2/Adam"
input: "biases/bc2/Adam_1"
input: "cost/beta1_power/read"
input: "cost/beta2_power/read"
input: "cost/Adam/learning_rate"
input: "cost/Adam/beta1"
input: "cost/Adam/beta2"
input: "cost/Adam/epsilon"
input: "cost/gradients/pred/conv2/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, u'cost/cost/Shape': name: "cost/cost/Shape"
op: "Shape"
input: "pred/fullyConnected/Add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, u'save/Assign_10': name: "save/Assign_10"
op: "Assign"
input: "biases/outB/Adam"
input: "save/RestoreV2:10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/outB"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save_1/Assign_9': name: "save_1/Assign_9"
op: "Assign"
input: "biases/outB"
input: "save_1/RestoreV2:9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/outB"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save_1/Assign_8': name: "save_1/Assign_8"
op: "Assign"
input: "biases/bd1/Adam_1"
input: "save_1/RestoreV2:8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'biases/bc1/Assign': name: "biases/bc1/Assign"
op: "Assign"
input: "biases/bc1"
input: "biases/random_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'biases/random_normal_1': name: "biases/random_normal_1"
op: "Add"
input: "biases/random_normal_1/mul"
input: "biases/random_normal_1/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
, u'cost/cost/Slice/begin': name: "cost/cost/Slice/begin"
op: "Pack"
input: "cost/cost/Sub"
attr {
  key: "N"
  value {
    i: 1
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}
, u'cost/gradients/cost/Mean_grad/floordiv': name: "cost/gradients/cost/Mean_grad/floordiv"
op: "FloorDiv"
input: "cost/gradients/cost/Mean_grad/Prod"
input: "cost/gradients/cost/Mean_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'cost/cost/Shape_2': name: "cost/cost/Shape_2"
op: "Shape"
input: "input/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, u'weights/random_normal_3/shape': name: "weights/random_normal_3/shape"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\004\000\000\002\000\000\000"
    }
  }
}
, u'cost/gradients/pred/fullyConnected/MatMul_grad/MatMul': name: "cost/gradients/pred/fullyConnected/MatMul_grad/MatMul"
op: "MatMul"
input: "cost/gradients/pred/fullyConnected/Add_grad/tuple/control_dependency"
input: "weights/wd1/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 9600
        }
      }
    }
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, u'cost/gradients/pred/conv1/BiasAdd_grad/tuple/group_deps': name: "cost/gradients/pred/conv1/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^cost/gradients/pred/conv1/BiasAdd_grad/BiasAddGrad"
input: "^cost/gradients/pred/conv1/Relu_grad/ReluGrad"
, u'save_1/Assign_20': name: "save_1/Assign_20"
op: "Assign"
input: "weights/wc2"
input: "save_1/RestoreV2:20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save/Assign_13': name: "save/Assign_13"
op: "Assign"
input: "cost/beta2_power"
input: "save/RestoreV2:13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'weights/outW': name: "weights/outW"
op: "VariableV2"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1024
      }
      dim {
        size: 2
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'specificity/Slice/size': name: "specificity/Slice/size"
op: "Pack"
input: "strided_slice"
input: "specificity/Slice/size/1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}
, u'biases/outB/Adam_1/Assign': name: "biases/outB/Adam_1/Assign"
op: "Assign"
input: "biases/outB/Adam_1"
input: "biases/outB/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/outB"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/mul_grad/Sum_1': name: "cost/gradients/pred/fullyConnected/dropout/mul_grad/Sum_1"
op: "Sum"
input: "cost/gradients/pred/fullyConnected/dropout/mul_grad/Mul_1"
input: "cost/gradients/pred/fullyConnected/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, u'weights/outW/Adam_1/read': name: "weights/outW/Adam_1/read"
op: "Identity"
input: "weights/outW/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/outW"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
, u'save/RestoreV2': name: "save/RestoreV2"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2/tensor_names"
input: "save/RestoreV2/shape_and_slices"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
    }
  }
}
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
    }
  }
}
, u'cost/cost/Slice_1/begin': name: "cost/cost/Slice_1/begin"
op: "Pack"
input: "cost/cost/Sub_1"
attr {
  key: "N"
  value {
    i: 1
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}
, u'weights/random_normal/shape': name: "weights/random_normal/shape"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\005\000\000\000\001\000\000\000\001\000\000\000 \000\000\000"
    }
  }
}
, u'weights/wc2/read': name: "weights/wc2/read"
op: "Identity"
input: "weights/wc2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
, u'biases/random_normal_2': name: "biases/random_normal_2"
op: "Add"
input: "biases/random_normal_2/mul"
input: "biases/random_normal_2/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'biases/random_normal_3': name: "biases/random_normal_3"
op: "Add"
input: "biases/random_normal_3/mul"
input: "biases/random_normal_3/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
, u'cost/gradients/pred/conv2/Conv2D_grad/tuple/group_deps': name: "cost/gradients/pred/conv2/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^cost/gradients/pred/conv2/Conv2D_grad/Conv2DBackpropFilter"
input: "^cost/gradients/pred/conv2/Conv2D_grad/Conv2DBackpropInput"
, u'cost/gradients/pred/conv1/Conv2D_grad/Conv2DBackpropInput': name: "cost/gradients/pred/conv1/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "cost/gradients/pred/conv1/Conv2D_grad/ShapeN"
input: "weights/wc1/read"
input: "cost/gradients/pred/conv1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 600
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}
, u'pred/fullyConnected/Reshape': name: "pred/fullyConnected/Reshape"
op: "Reshape"
input: "pred/conv2/Relu_1"
input: "pred/fullyConnected/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 9600
        }
      }
    }
  }
}
, u'cost/gradients/pred/fullyConnected/Add_grad/tuple/control_dependency': name: "cost/gradients/pred/fullyConnected/Add_grad/tuple/control_dependency"
op: "Identity"
input: "cost/gradients/pred/fullyConnected/Add_grad/Reshape"
input: "^cost/gradients/pred/fullyConnected/Add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/pred/fullyConnected/Add_grad/Reshape"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'pred/fullyConnected/Reshape/shape': name: "pred/fullyConnected/Reshape/shape"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\377\377\377\377\200%\000\000"
    }
  }
}
, u'pred/reshape/Reshape/shape': name: "pred/reshape/Reshape/shape"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\377\377\377\377X\002\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, u'weights/random_normal_3/mul': name: "weights/random_normal_3/mul"
op: "Mul"
input: "weights/random_normal_3/RandomStandardNormal"
input: "weights/random_normal_3/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
, u'save_1/MergeV2Checkpoints': name: "save_1/MergeV2Checkpoints"
op: "MergeV2Checkpoints"
input: "save_1/MergeV2Checkpoints/checkpoint_prefixes"
input: "save_1/Const"
attr {
  key: "delete_old_dirs"
  value {
    b: true
  }
}
, u'save_1/RestoreV2': name: "save_1/RestoreV2"
op: "RestoreV2"
input: "save_1/Const"
input: "save_1/RestoreV2/tensor_names"
input: "save_1/RestoreV2/shape_and_slices"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
      shape {
        unknown_rank: true
      }
    }
  }
}
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
    }
  }
}
, u'specificity/specificity': name: "specificity/specificity"
op: "ScalarSummary"
input: "specificity/specificity/tags"
input: "sensitivity/div"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'save/Assign_8': name: "save/Assign_8"
op: "Assign"
input: "biases/bd1/Adam_1"
input: "save/RestoreV2:8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save_1/RestoreV2/tensor_names': name: "save_1/RestoreV2/tensor_names"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 26
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 26
        }
      }
      string_val: "biases/bc1"
      string_val: "biases/bc1/Adam"
      string_val: "biases/bc1/Adam_1"
      string_val: "biases/bc2"
      string_val: "biases/bc2/Adam"
      string_val: "biases/bc2/Adam_1"
      string_val: "biases/bd1"
      string_val: "biases/bd1/Adam"
      string_val: "biases/bd1/Adam_1"
      string_val: "biases/outB"
      string_val: "biases/outB/Adam"
      string_val: "biases/outB/Adam_1"
      string_val: "cost/beta1_power"
      string_val: "cost/beta2_power"
      string_val: "weights/outW"
      string_val: "weights/outW/Adam"
      string_val: "weights/outW/Adam_1"
      string_val: "weights/wc1"
      string_val: "weights/wc1/Adam"
      string_val: "weights/wc1/Adam_1"
      string_val: "weights/wc2"
      string_val: "weights/wc2/Adam"
      string_val: "weights/wc2/Adam_1"
      string_val: "weights/wd1"
      string_val: "weights/wd1/Adam"
      string_val: "weights/wd1/Adam_1"
    }
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/div_grad/Neg': name: "cost/gradients/pred/fullyConnected/dropout/div_grad/Neg"
op: "Neg"
input: "pred/fullyConnected/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'cost/cost/Slice': name: "cost/cost/Slice"
op: "Slice"
input: "cost/cost/Shape_1"
input: "cost/cost/Slice/begin"
input: "cost/cost/Slice/size"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/mul_grad/tuple/group_deps': name: "cost/gradients/pred/fullyConnected/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^cost/gradients/pred/fullyConnected/dropout/mul_grad/Reshape"
input: "^cost/gradients/pred/fullyConnected/dropout/mul_grad/Reshape_1"
, u'weights/wc1/Adam/Initializer/zeros': name: "weights/wc1/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}
, u'weights/random_normal_3/mean': name: "weights/random_normal_3/mean"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, u'cost/gradients/pred/fullyConnected/Add_grad/Shape_1': name: "cost/gradients/pred/fullyConnected/Add_grad/Shape_1"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1024
    }
  }
}
, u'cost/Mean': name: "cost/Mean"
op: "Mean"
input: "cost/cost/Reshape_2"
input: "cost/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, u'save/Assign_7': name: "save/Assign_7"
op: "Assign"
input: "biases/bd1/Adam"
input: "save/RestoreV2:7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'cost/gradients/pred/conv1/Conv2D_grad/tuple/control_dependency': name: "cost/gradients/pred/conv1/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "cost/gradients/pred/conv1/Conv2D_grad/Conv2DBackpropInput"
input: "^cost/gradients/pred/conv1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/pred/conv1/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 600
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
, u'save_1/restore_all': name: "save_1/restore_all"
op: "NoOp"
input: "^save_1/restore_shard"
, u'cost/gradients/pred/fullyConnected/Add_1_grad/tuple/group_deps': name: "cost/gradients/pred/fullyConnected/Add_1_grad/tuple/group_deps"
op: "NoOp"
input: "^cost/gradients/pred/fullyConnected/Add_1_grad/Reshape"
input: "^cost/gradients/pred/fullyConnected/Add_1_grad/Reshape_1"
, u'weights/random_normal_3/stddev': name: "weights/random_normal_3/stddev"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, u'biases/bd1/Adam/Assign': name: "biases/bd1/Adam/Assign"
op: "Assign"
input: "biases/bd1/Adam"
input: "biases/bd1/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save/Assign_2': name: "save/Assign_2"
op: "Assign"
input: "biases/bc1/Adam_1"
input: "save/RestoreV2:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'biases/outB/Adam': name: "biases/outB/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/outB"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 2
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'cost/gradients/cost/Mean_grad/Maximum': name: "cost/gradients/cost/Mean_grad/Maximum"
op: "Maximum"
input: "cost/gradients/cost/Mean_grad/Prod_1"
input: "cost/gradients/cost/Mean_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'cost/Adam/update_biases/bc1/ApplyAdam': name: "cost/Adam/update_biases/bc1/ApplyAdam"
op: "ApplyAdam"
input: "biases/bc1"
input: "biases/bc1/Adam"
input: "biases/bc1/Adam_1"
input: "cost/beta1_power/read"
input: "cost/beta2_power/read"
input: "cost/Adam/learning_rate"
input: "cost/Adam/beta1"
input: "cost/Adam/beta2"
input: "cost/Adam/epsilon"
input: "cost/gradients/pred/conv1/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/mul_grad/Shape_1': name: "cost/gradients/pred/fullyConnected/dropout/mul_grad/Shape_1"
op: "Shape"
input: "pred/fullyConnected/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, u'cost/gradients/pred/conv1/Relu_grad/ReluGrad': name: "cost/gradients/pred/conv1/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "cost/gradients/pred/conv1/MaxPool_grad/MaxPoolGrad"
input: "pred/conv1/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 600
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
, u'weights/random_normal_3/RandomStandardNormal': name: "weights/random_normal_3/RandomStandardNormal"
op: "RandomStandardNormal"
input: "weights/random_normal_3/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}
, u'cost/gradients/cost/cost_grad/ExpandDims/dim': name: "cost/gradients/cost/cost_grad/ExpandDims/dim"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/mul_grad/Sum': name: "cost/gradients/pred/fullyConnected/dropout/mul_grad/Sum"
op: "Sum"
input: "cost/gradients/pred/fullyConnected/dropout/mul_grad/Mul"
input: "cost/gradients/pred/fullyConnected/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, u'pred/conv2/BiasAdd': name: "pred/conv2/BiasAdd"
op: "BiasAdd"
input: "pred/conv2/Conv2D"
input: "biases/bc2/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 300
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, u'biases/bd1/Adam_1/Initializer/zeros/Const': name: "biases/bd1/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, u'biases/bd1/Adam/Initializer/zeros/shape_as_tensor': name: "biases/bd1/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1024
    }
  }
}
, u'specificity/Const_1': name: "specificity/Const_1"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, u'save_1/Assign': name: "save_1/Assign"
op: "Assign"
input: "biases/bc1"
input: "save_1/RestoreV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'weights/outW/Adam/Assign': name: "weights/outW/Adam/Assign"
op: "Assign"
input: "weights/outW/Adam"
input: "weights/outW/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/outW"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/mul_grad/Reshape': name: "cost/gradients/pred/fullyConnected/dropout/mul_grad/Reshape"
op: "Reshape"
input: "cost/gradients/pred/fullyConnected/dropout/mul_grad/Sum"
input: "cost/gradients/pred/fullyConnected/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
, u'weights/wc2/Adam_1': name: "weights/wc2/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 5
      }
      dim {
        size: 1
      }
      dim {
        size: 32
      }
      dim {
        size: 64
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'cost/gradients/pred/conv2/BiasAdd_grad/tuple/control_dependency': name: "cost/gradients/pred/conv2/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "cost/gradients/pred/conv2/Relu_grad/ReluGrad"
input: "^cost/gradients/pred/conv2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/pred/conv2/Relu_grad/ReluGrad"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 300
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
}
, u'biases/bc1/read': name: "biases/bc1/read"
op: "Identity"
input: "biases/bc1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
, u'pred/fullyConnected/dropout/random_uniform/mul': name: "pred/fullyConnected/dropout/random_uniform/mul"
op: "Mul"
input: "pred/fullyConnected/dropout/random_uniform/RandomUniform"
input: "pred/fullyConnected/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'weights/outW/Adam/Initializer/zeros/shape_as_tensor': name: "weights/outW/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/outW"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\004\000\000\002\000\000\000"
    }
  }
}
, u'save/RestoreV2/shape_and_slices': name: "save/RestoreV2/shape_and_slices"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 26
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 26
        }
      }
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
    }
  }
}
, u'pred/fullyConnected/dropout/Floor': name: "pred/fullyConnected/dropout/Floor"
op: "Floor"
input: "pred/fullyConnected/dropout/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
, u'sensitivity/Const_1': name: "sensitivity/Const_1"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, u'cost/gradients/cost/Mean_grad/Prod_1': name: "cost/gradients/cost/Mean_grad/Prod_1"
op: "Prod"
input: "cost/gradients/cost/Mean_grad/Shape_2"
input: "cost/gradients/cost/Mean_grad/Const_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, u'weights/wc2/Adam/Initializer/zeros/Const': name: "weights/wc2/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, u'weights/outW/Adam/Initializer/zeros': name: "weights/outW/Adam/Initializer/zeros"
op: "Fill"
input: "weights/outW/Adam/Initializer/zeros/shape_as_tensor"
input: "weights/outW/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/outW"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, u'save_1/ShardedFilename/shard': name: "save_1/ShardedFilename/shard"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, u'cost/gradients/cost/cost_grad/tuple/group_deps': name: "cost/gradients/cost/cost_grad/tuple/group_deps"
op: "NoOp"
input: "^cost/gradients/cost/cost_grad/mul"
input: "^cost/gradients/cost/cost_grad/mul_1"
, u'save_1/num_shards': name: "save_1/num_shards"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, u'biases/random_normal_1/stddev': name: "biases/random_normal_1/stddev"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, u'pred/fullyConnected/dropout/div': name: "pred/fullyConnected/dropout/div"
op: "RealDiv"
input: "pred/fullyConnected/Relu"
input: "input/drop"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
, u'cost/gradients/pred/fullyConnected/Add_1_grad/Reshape_1': name: "cost/gradients/pred/fullyConnected/Add_1_grad/Reshape_1"
op: "Reshape"
input: "cost/gradients/pred/fullyConnected/Add_1_grad/Sum_1"
input: "cost/gradients/pred/fullyConnected/Add_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
, u'cost/gradients/pred/conv1/BiasAdd_grad/tuple/control_dependency': name: "cost/gradients/pred/conv1/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "cost/gradients/pred/conv1/Relu_grad/ReluGrad"
input: "^cost/gradients/pred/conv1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/pred/conv1/Relu_grad/ReluGrad"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 600
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/div_grad/Reshape': name: "cost/gradients/pred/fullyConnected/dropout/div_grad/Reshape"
op: "Reshape"
input: "cost/gradients/pred/fullyConnected/dropout/div_grad/Sum"
input: "cost/gradients/pred/fullyConnected/dropout/div_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/mul_grad/tuple/control_dependency': name: "cost/gradients/pred/fullyConnected/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "cost/gradients/pred/fullyConnected/dropout/mul_grad/Reshape"
input: "^cost/gradients/pred/fullyConnected/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/pred/fullyConnected/dropout/mul_grad/Reshape"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
, u'sensitivity/Sum': name: "sensitivity/Sum"
op: "Sum"
input: "sensitivity/Mul"
input: "sensitivity/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, u'cost/gradients/cost/Mean_grad/Tile': name: "cost/gradients/cost/Mean_grad/Tile"
op: "Tile"
input: "cost/gradients/cost/Mean_grad/Reshape"
input: "cost/gradients/cost/Mean_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
, u'cost/gradients/pred/fullyConnected/MatMul_1_grad/tuple/group_deps': name: "cost/gradients/pred/fullyConnected/MatMul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^cost/gradients/pred/fullyConnected/MatMul_1_grad/MatMul"
input: "^cost/gradients/pred/fullyConnected/MatMul_1_grad/MatMul_1"
, u'cost/Adam/update_weights/wc1/ApplyAdam': name: "cost/Adam/update_weights/wc1/ApplyAdam"
op: "ApplyAdam"
input: "weights/wc1"
input: "weights/wc1/Adam"
input: "weights/wc1/Adam_1"
input: "cost/beta1_power/read"
input: "cost/beta2_power/read"
input: "cost/Adam/learning_rate"
input: "cost/Adam/beta1"
input: "cost/Adam/beta2"
input: "cost/Adam/epsilon"
input: "cost/gradients/pred/conv1/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, u'sensitivity/ArgMax/dimension': name: "sensitivity/ArgMax/dimension"
op: "Const"
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, u'cost/Adam/mul_1': name: "cost/Adam/mul_1"
op: "Mul"
input: "cost/beta2_power/read"
input: "cost/Adam/beta2"
input: "^cost/Adam/update_biases/bc1/ApplyAdam"
input: "^cost/Adam/update_biases/bc2/ApplyAdam"
input: "^cost/Adam/update_biases/bd1/ApplyAdam"
input: "^cost/Adam/update_biases/outB/ApplyAdam"
input: "^cost/Adam/update_weights/outW/ApplyAdam"
input: "^cost/Adam/update_weights/wc1/ApplyAdam"
input: "^cost/Adam/update_weights/wc2/ApplyAdam"
input: "^cost/Adam/update_weights/wd1/ApplyAdam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'cost/cost/Sub': name: "cost/cost/Sub"
op: "Sub"
input: "cost/cost/Rank_1"
input: "cost/cost/Sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
      }
    }
  }
}
, u'weights/wc1/Adam_1/Assign': name: "weights/wc1/Adam_1/Assign"
op: "Assign"
input: "weights/wc1/Adam_1"
input: "weights/wc1/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'biases/bc1/Adam': name: "biases/bc1/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/bc1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'weights/outW/Adam_1': name: "weights/outW/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/outW"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1024
      }
      dim {
        size: 2
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, u'biases/outB/Adam_1/Initializer/zeros': name: "biases/outB/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@biases/outB"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 2
        }
      }
      float_val: 0.0
    }
  }
}
, u'sensitivity/Slice/size': name: "sensitivity/Slice/size"
op: "Pack"
input: "strided_slice"
input: "sensitivity/Slice/size/1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}
, u'cost/gradients/pred/fullyConnected/Add_grad/Reshape_1': name: "cost/gradients/pred/fullyConnected/Add_grad/Reshape_1"
op: "Reshape"
input: "cost/gradients/pred/fullyConnected/Add_grad/Sum_1"
input: "cost/gradients/pred/fullyConnected/Add_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
, u'save/Assign_20': name: "save/Assign_20"
op: "Assign"
input: "weights/wc2"
input: "save/RestoreV2:20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save/Assign_21': name: "save/Assign_21"
op: "Assign"
input: "weights/wc2/Adam"
input: "save/RestoreV2:21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save/Assign_22': name: "save/Assign_22"
op: "Assign"
input: "weights/wc2/Adam_1"
input: "save/RestoreV2:22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wc2"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save/Assign_23': name: "save/Assign_23"
op: "Assign"
input: "weights/wd1"
input: "save/RestoreV2:23"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save/Assign_24': name: "save/Assign_24"
op: "Assign"
input: "weights/wd1/Adam"
input: "save/RestoreV2:24"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'save/Assign_25': name: "save/Assign_25"
op: "Assign"
input: "weights/wd1/Adam_1"
input: "save/RestoreV2:25"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@weights/wd1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: 9600
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, u'specificity/Reshape': name: "specificity/Reshape"
op: "Reshape"
input: "specificity/Slice"
input: "specificity/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
, u'cost/gradients/pred/fullyConnected/dropout/div_grad/tuple/control_dependency_1': name: "cost/gradients/pred/fullyConnected/dropout/div_grad/tuple/control_dependency_1"
op: "Identity"
input: "cost/gradients/pred/fullyConnected/dropout/div_grad/Reshape_1"
input: "^cost/gradients/pred/fullyConnected/dropout/div_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@cost/gradients/pred/fullyConnected/dropout/div_grad/Reshape_1"
    }
  }
}
attr {
  key: "_output_shapes"
  value {
    list {
      shape {
        unknown_rank: true
      }
    }
  }
}
}
